node {
  name: "Placeholder"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 75
        }
      }
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 75
        }
      }
    }
  }
}
node {
  name: "fifo_queue"
  op: "FIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fifo_queue_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "fifo_queue"
  input: "Placeholder"
  input: "Placeholder_1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "fifo_queue_Close"
  op: "QueueCloseV2"
  input: "fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1330
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1330
          }
        }
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0056_c1s1_007401_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0056_c1s1_007451_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0056_c2s1_006551_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0056_c3s1_006551_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0056_c3s1_006851_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0056_c4s1_007701_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0056_c4s1_007801_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0056_c4s1_009076_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0056_c5s1_007326_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0056_c5s1_007501_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0056_c5s1_007526_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0056_c5s1_007626_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0064_c2s1_008301_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0064_c2s1_008326_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0064_c2s1_008351_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0064_c3s1_008526_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0064_c3s1_008551_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0064_c6s1_009101_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0064_c6s1_009126_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0064_c6s1_009151_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0064_c6s1_009176_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0070_c1s1_010951_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0070_c3s1_010501_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0070_c4s1_010576_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0070_c4s1_010601_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0070_c5s1_011076_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0122_c1s1_019951_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0122_c1s1_020001_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0122_c4s1_020126_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0122_c4s1_020151_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0125_c1s1_021101_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0125_c2s1_020701_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0125_c4s1_020676_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0125_c4s1_020726_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0169_c1s1_030551_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0169_c2s1_029851_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0169_c2s1_029876_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c1s1_033026_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c1s1_033051_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c1s1_037051_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c1s1_037101_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c2s1_032476_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c2s1_032501_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c2s1_032526_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c3s1_032601_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c3s1_036426_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c3s1_036501_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c5s1_033051_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c5s1_037051_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c5s1_037076_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c5s1_037126_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c5s1_037151_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c5s1_037176_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c6s1_033151_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c6s1_033176_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c6s1_033201_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c6s1_036851_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c6s1_036876_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c6s1_036926_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c6s1_036951_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c6s1_036976_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0178_c6s1_036976_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0201_c1s1_039976_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0201_c1s1_040001_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0201_c2s1_039376_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0201_c2s1_039401_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0201_c2s1_039501_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0201_c3s1_039676_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0201_c6s1_040226_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0201_c6s1_040251_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0201_c6s1_040276_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c1s1_042176_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c1s1_045276_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c1s1_045426_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c1s1_045426_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c1s2_002716_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c1s2_019491_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c1s4_036856_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c1s4_036906_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c1s4_037006_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c2s1_045276_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c2s1_075021_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c2s1_091821_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c2s2_094482_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c3s1_041751_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c3s1_041776_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c3s1_044601_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c3s1_044726_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c3s1_044751_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c3s1_070017_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c3s1_070042_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c3s1_074667_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c3s1_074692_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c3s1_091967_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c3s2_097053_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c3s2_097128_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c4s1_041626_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c4s1_041726_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c5s1_042151_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c5s1_042176_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c5s1_042301_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c5s1_045301_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c5s1_045326_09.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c5s1_075373_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c5s1_075523_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c5s1_092348_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c5s2_097627_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c5s2_097727_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c5s2_097902_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_042276_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_042301_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_042326_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_042351_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_042376_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_042401_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_042426_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_045076_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_045126_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_045176_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_045226_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_045251_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_070576_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_070601_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_070626_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_070651_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_070676_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_075151_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_075176_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_075201_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_075226_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s1_075301_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s2_091243_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s2_091268_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0208_c6s2_091343_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0248_c1s1_051726_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0248_c2s1_051151_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0248_c2s1_051176_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0248_c2s1_051276_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0248_c3s1_050951_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0248_c3s1_050976_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0248_c5s1_051776_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0248_c5s1_051776_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0248_c5s1_051801_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0248_c5s1_051851_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0248_c6s1_051451_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0248_c6s1_051476_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0248_c6s1_051501_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0249_c2s1_051976_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0249_c2s1_052001_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0249_c2s1_052026_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0249_c3s1_051901_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0249_c3s1_051926_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c1s1_053401_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c1s1_053526_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c1s4_032931_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c1s4_032956_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c2s1_052926_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c2s1_052951_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c2s1_053026_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c2s1_053051_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c2s1_053951_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c2s1_054026_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c2s2_090382_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c2s2_090382_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c2s2_090407_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c3s1_052826_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c3s1_054276_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c3s1_054301_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c3s2_093128_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c3s2_093203_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c3s2_093228_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c5s1_052801_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c5s1_053326_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c5s1_053376_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c5s1_053401_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c6s1_054876_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c6s2_087218_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0254_c6s2_087243_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c1s1_055181_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c1s1_055231_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c1s1_055581_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c1s1_060656_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c1s2_009166_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c2s1_060071_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c2s1_060246_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c2s1_081421_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c2s1_081446_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c3s1_054926_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c3s1_055001_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c3s1_055176_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c3s1_059842_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c3s1_059867_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c3s1_081642_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c3s1_081667_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c5s1_055176_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c5s1_055223_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c5s1_055273_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c5s1_055498_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c5s1_060648_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c5s1_060723_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c5s1_060773_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c5s1_082048_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055401_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055476_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055501_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055526_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055526_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055551_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055551_10.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055576_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055601_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055626_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055651_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055676_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055701_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055726_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055726_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055751_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055801_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055801_10.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055876_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055901_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_055926_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_060301_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_060326_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_060376_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_060401_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_082251_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_082301_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0261_c6s1_082326_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c1s1_057306_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c1s1_057331_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c1s1_065656_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c2s1_056746_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c2s1_056746_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c2s1_056771_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c2s1_065146_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c3s1_056892_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c3s1_056942_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c3s1_064892_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c5s1_057248_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c5s1_057348_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c5s1_065623_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c5s1_065698_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c5s1_065698_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c6s1_057476_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c6s1_057501_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c6s1_057526_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c6s1_057551_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c6s1_057576_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c6s1_065376_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c6s1_065401_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c6s1_065426_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c6s1_065451_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0266_c6s1_065476_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c3s1_075617_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c5s1_076273_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c5s1_076373_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c6s1_067276_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c6s1_067326_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c6s1_067351_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c6s1_067376_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c6s1_067426_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c6s1_076026_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c6s1_076051_10.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c6s1_076101_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c6s1_076126_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c6s1_076126_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c6s1_076151_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0301_c6s1_076176_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c1s1_070731_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c1s1_070781_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c2s1_070146_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c2s1_070146_09.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c2s1_070171_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c2s1_070171_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c3s1_070242_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c3s1_070317_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c3s1_070467_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c4s1_071232_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c4s1_071282_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c4s1_071382_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c5s1_070848_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c5s1_071048_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c5s1_071098_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0314_c5s1_071123_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c1s2_003766_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c1s2_003816_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c1s4_054886_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c1s4_054911_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c1s5_051591_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c1s5_051616_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c1s5_051641_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c1s5_051866_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c2s3_019282_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c2s3_019307_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c3s1_075767_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c3s1_075817_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c3s1_078267_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c3s1_078317_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c3s2_105528_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c3s2_105553_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c3s2_115144_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c3s2_115169_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c3s2_115194_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c3s3_025153_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c3s3_025178_10.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c4s2_003717_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c4s2_003742_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c4s2_003742_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c4s2_005517_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c4s2_005542_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c4s4_044685_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c4s4_044710_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c4s4_054766_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c4s5_050760_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c4s5_050810_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c5s1_076473_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c5s1_076523_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c5s1_076673_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c5s1_078673_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c5s1_078698_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c5s2_105927_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c5s2_105977_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c5s2_106002_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c5s2_115899_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c5s2_115924_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s1_076276_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s1_076301_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s1_076351_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s1_076401_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s1_076451_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s1_078801_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s1_078876_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s2_099668_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s2_099718_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s2_099743_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s2_099768_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s2_109218_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s2_109268_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s2_109318_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0333_c6s2_109368_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0339_c1s2_005191_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0339_c1s2_005266_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0339_c2s1_077996_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0339_c2s1_078096_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0339_c2s1_078121_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0339_c3s1_077817_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0339_c4s2_004467_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0339_c4s2_004592_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0339_c4s2_004817_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0339_c5s1_078273_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0339_c5s1_078298_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c1s2_008416_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c2s1_080671_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c2s1_080671_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c2s1_080696_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c2s1_080696_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c3s1_080867_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c3s1_080942_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c5s1_081198_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c5s1_081223_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c5s1_081273_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c6s1_081476_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c6s1_081501_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c6s1_081526_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0348_c6s1_081551_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c1s2_015241_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c1s2_015316_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c1s2_015341_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c1s2_022816_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c1s2_022941_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c2s1_087496_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c2s1_087521_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c3s1_087642_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c3s1_087667_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c3s1_095042_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c3s1_095092_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c5s1_088148_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c5s1_095698_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c5s1_095723_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c5s1_095748_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0370_c5s1_095773_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c1s2_016641_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c2s1_088921_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c2s1_088946_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c2s1_096846_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c2s1_096871_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c3s1_089092_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c3s1_089117_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c3s1_096617_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c5s1_089448_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c5s1_089498_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c5s1_097423_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c5s1_097473_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c5s1_097473_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0377_c5s1_097548_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0398_c1s2_022116_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0398_c1s2_027466_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0398_c3s1_094467_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0398_c3s1_094567_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0398_c3s1_099717_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0398_c3s1_099742_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0398_c5s1_094873_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0398_c5s1_095098_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c1s2_060121_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c2s1_097821_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c2s1_097821_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c2s1_097846_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c2s1_097846_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c2s1_097871_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c2s1_098046_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c2s1_098096_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c2s1_132366_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c2s1_132366_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c3s1_098292_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c3s1_098317_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c3s1_132083_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c3s1_132108_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c3s1_132158_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c3s1_132183_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c5s1_098348_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c5s1_098398_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c5s1_098598_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0413_c5s1_098623_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0459_c1s6_032496_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0459_c1s6_032546_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0459_c1s6_032596_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0459_c4s6_031516_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0459_c4s6_031541_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0459_c4s6_031741_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0459_c4s6_031791_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0459_c4s6_031841_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c1s2_067146_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c1s4_021206_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c1s4_021281_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c2s1_139366_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c2s1_139491_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c2s2_078882_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c2s2_078907_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c3s1_139608_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c3s1_139658_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c3s1_139708_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c3s2_081428_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c3s2_081453_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c3s2_081628_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c5s1_139870_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c5s1_140020_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c5s2_082302_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c5s2_082352_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c5s2_082352_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c6s2_075318_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c6s2_075418_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c6s2_075443_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c6s2_075568_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c6s2_075618_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0508_c6s2_075643_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0522_c1s2_071346_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0522_c3s1_143733_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0522_c4s2_070848_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0522_c4s2_070873_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0522_c4s2_070898_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0522_c4s2_070948_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0522_c5s1_144145_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0537_c1s3_005196_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0537_c1s3_005221_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0537_c2s1_152491_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0537_c4s3_004798_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0537_c4s3_004823_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0537_c5s1_152920_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0537_c5s1_152945_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0539_c1s3_007796_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0539_c1s3_007821_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0539_c1s3_007846_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0539_c2s1_154666_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0539_c2s1_154691_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0539_c2s1_154791_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0539_c4s3_007873_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0539_c4s3_007973_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0539_c5s1_155495_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0539_c5s1_155520_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0546_c1s3_010146_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0546_c2s1_157316_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0546_c2s1_157341_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0546_c2s1_157416_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0546_c3s1_157358_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0546_c3s1_157533_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0546_c3s1_157608_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0546_c3s1_157633_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0552_c1s3_010496_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0552_c1s3_010521_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0552_c2s1_157766_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0552_c2s1_157766_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0552_c2s1_157791_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0552_c3s1_157958_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0552_c3s1_157983_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0552_c3s1_158008_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0552_c5s1_158345_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c1s3_011946_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c1s3_011971_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c1s3_027901_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c1s3_027951_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c3s1_159233_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c3s1_159258_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c3s2_013287_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c3s2_013337_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c3s2_013362_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c5s1_159695_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c5s1_159720_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c5s1_159770_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c5s2_013980_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c5s2_014030_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c5s2_014080_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c6s2_007393_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c6s2_007418_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c6s2_007443_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c6s2_007468_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c6s2_007518_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c6s2_007518_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c6s2_007593_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c6s2_007618_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0555_c6s2_007618_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c1s3_011321_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c1s3_011371_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c1s3_013996_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c1s3_014071_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c3s1_158683_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c3s1_161008_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c3s1_161133_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c3s1_161158_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c3s1_161158_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c5s1_159145_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c5s1_159170_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c5s1_159170_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c5s1_159220_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c5s1_159220_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c5s1_159245_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c5s2_000033_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0556_c5s2_000108_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c1s3_015596_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c1s3_015621_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c1s3_044476_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c2s1_162016_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c2s1_162841_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c2s1_162916_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c2s2_027087_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c3s2_001296_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c3s2_001321_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c3s2_001371_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c3s2_029737_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c3s2_029762_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c3s2_029812_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c5s2_030405_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c6s2_023843_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c6s2_023868_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c6s2_023918_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0558_c6s2_023943_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c1s3_026526_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c1s3_026551_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c1s3_026551_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c1s3_026601_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c3s2_012237_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c3s2_012462_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c3s2_012512_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s3_025379_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s4_037035_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s4_037110_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s4_037210_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s4_037335_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s4_037385_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s4_037435_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s4_037760_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s4_038435_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s4_038835_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s4_039010_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s4_039010_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s4_039260_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c4s4_039360_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c5s2_012630_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c5s2_012680_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c5s2_012705_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c5s2_012730_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c5s2_012730_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c5s2_012780_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c6s2_006343_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c6s2_006343_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c6s2_006418_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c6s2_006418_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c6s2_006618_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0581_c6s2_006693_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c1s3_032051_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c1s3_032101_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c1s3_032176_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c1s4_017081_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c1s4_017156_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c2s2_014762_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c3s2_017462_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c3s2_017512_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c3s2_017887_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c3s2_017962_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c3s2_056912_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c3s2_057087_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c3s2_057162_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c3s2_057287_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c3s2_057337_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c3s2_077253_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c3s2_077278_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c4s3_030954_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c4s3_031029_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c4s3_031304_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c4s3_031354_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c4s3_031404_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c4s4_017010_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c4s4_017185_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c5s2_017905_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c5s2_018030_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c5s2_018055_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c5s2_057780_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c5s2_057805_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c5s2_057930_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c5s2_058230_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c5s2_078002_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c5s2_078052_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c5s2_078077_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_011568_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_011593_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_012093_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_012118_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_050993_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_051068_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_051118_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_051393_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_051443_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_051468_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_051543_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_051843_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_071143_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0606_c6s2_071343_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c1s3_033676_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c1s3_033701_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c1s4_020506_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c1s4_020556_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c2s2_016187_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c2s2_016212_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c2s2_078007_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c2s2_078007_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c2s2_078032_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c3s2_019362_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c3s2_019387_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c3s2_080803_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c3s2_080828_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c3s2_080853_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c5s2_081577_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c6s2_013543_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c6s2_013568_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c6s2_013568_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c6s2_013593_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c6s2_074918_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c6s2_074943_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0614_c6s2_074968_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c1s3_040801_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c1s3_053976_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c1s3_054001_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c2s2_023137_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c2s2_036662_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c3s2_026512_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c3s2_026537_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c3s2_039237_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c3s2_039312_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c5s2_026880_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c5s2_026880_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c5s2_040055_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c5s2_040080_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c5s2_040080_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c6s2_020718_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c6s2_020743_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c6s2_033343_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c6s2_033368_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0635_c6s2_033393_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c1s3_048551_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c1s3_048576_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c1s3_063026_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c1s3_063126_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c1s3_063151_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c1s3_063201_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c2s2_031037_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c2s2_045812_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c3s2_034237_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c3s2_034262_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c3s2_048412_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c3s2_048487_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c5s2_034655_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c5s2_049055_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c6s2_028468_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c6s2_028518_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c6s2_042468_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c6s2_042493_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c6s2_042518_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0648_c6s2_042568_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c1s3_048751_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c1s3_065501_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c1s3_065601_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c3s2_034262_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c3s2_034262_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c3s2_034437_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c3s2_050912_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c3s2_050937_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c3s2_050987_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c4s3_066104_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c5s2_034880_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c5s2_051580_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c5s2_051605_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c5s2_051705_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c5s2_051730_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c6s2_028518_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c6s2_028543_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c6s2_028593_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c6s2_028618_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c6s2_044993_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c6s2_045018_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c6s2_045043_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c6s2_045068_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c6s2_045118_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c6s2_045168_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c6s2_045193_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0653_c6s2_045218_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c1s3_055976_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c1s3_055976_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c1s3_056001_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c1s3_061876_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c1s3_061901_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c2s2_038437_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c2s2_038537_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c2s2_044412_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c2s2_044487_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c3s2_041662_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c3s2_041712_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c3s2_047162_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c3s2_047187_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c5s2_042080_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c5s2_047980_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c5s2_047980_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c5s2_048055_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c6s2_035893_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c6s2_035918_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c6s2_035968_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c6s2_041268_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0665_c6s2_041293_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0669_c1s3_064951_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0669_c2s2_041187_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0669_c2s2_047437_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0669_c3s2_044362_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0669_c3s2_044387_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0669_c3s2_050287_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0669_c3s2_050312_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0669_c3s2_050337_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0669_c5s2_044730_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0669_c5s2_051130_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0669_c6s2_038568_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0669_c6s2_044418_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c1s3_058726_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c1s3_058751_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c1s3_066626_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c1s3_066776_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c1s3_066801_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c2s2_041187_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c2s2_041262_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c2s2_049312_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c2s2_049337_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c3s2_044487_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c3s2_044537_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c3s2_051987_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c3s2_052012_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c5s2_044805_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c5s2_052705_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c6s2_038718_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c6s2_038743_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c6s2_046093_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c6s2_046118_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0670_c6s2_046143_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c1s4_009681_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c1s4_009756_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c1s4_050331_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c1s4_050381_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c1s4_050406_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c2s2_067257_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c2s2_107732_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c3s2_064203_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c3s2_064303_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c3s2_064628_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c3s2_064678_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c3s2_064678_10.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c3s2_111028_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c3s2_111078_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c4s3_063104_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c4s3_063154_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c4s3_063179_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c4s4_050710_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c5s2_065177_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c5s2_065302_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c5s2_111352_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c5s2_111677_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c6s2_043268_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c6s2_043343_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c6s2_043468_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c6s2_058318_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c6s2_058343_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c6s2_058418_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c6s2_058443_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c6s2_058468_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c6s2_058493_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c6s2_105268_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0689_c6s2_105293_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c1s4_003106_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c1s4_003131_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c1s4_048531_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c2s2_060532_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c2s2_060607_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c2s2_106057_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c2s2_106132_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c2s2_106282_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c3s2_063753_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c3s2_063778_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c3s2_063803_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c3s2_108578_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c3s2_108628_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c3s2_108703_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c5s2_064177_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c5s2_109502_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c5s2_109527_09.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c6s2_058018_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c6s2_058043_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0733_c6s2_102818_10.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0781_c1s4_020006_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0781_c2s2_077407_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0781_c2s2_077482_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0781_c3s2_080703_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0781_c3s2_080703_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0781_c3s2_080753_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0781_c5s2_081002_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0781_c6s2_074918_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0781_c6s2_074943_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0781_c6s2_074968_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0781_c6s2_074993_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c1s4_039256_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c1s4_039281_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c3s2_099578_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c3s2_099653_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c4s4_039210_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c4s4_039235_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c4s4_039285_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c4s4_039360_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c5s2_100252_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c5s2_100327_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c5s2_100352_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c5s2_100377_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c6s2_093668_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c6s2_093693_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c6s2_093718_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c6s2_093768_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0814_c6s2_093818_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0864_c2s2_105182_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0864_c3s2_107903_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0864_c3s2_107928_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0868_c1s4_048156_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0868_c2s2_105582_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0868_c2s2_105607_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0868_c3s2_108203_11.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0868_c3s2_108228_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0868_c3s2_108253_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0868_c3s2_108278_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c1s4_051481_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c1s4_051506_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c1s4_062086_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c1s5_007961_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c2s2_108957_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c2s2_108957_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c2s2_108982_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c2s2_108982_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c2s2_119552_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c2s2_119577_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c2s2_140327_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c2s2_140327_09.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c2s2_140352_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c2s2_140427_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c2s2_140427_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c3s2_112178_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c3s2_112203_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c3s2_122294_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c3s2_143544_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c3s2_143569_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c3s2_143594_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c5s2_112477_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c5s2_112527_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c5s2_143924_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c6s2_106393_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c6s2_106418_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c6s2_116443_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c6s2_116468_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c6s3_005517_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c6s3_005542_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c6s3_005567_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c6s3_024292_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c6s3_024367_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0907_c6s3_024417_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c1s4_053061_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c1s4_053086_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c1s4_058786_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c1s4_058911_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c2s2_110357_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c2s2_110507_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c2s2_116377_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c2s2_116402_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c3s2_113828_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c3s2_113853_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c3s2_113853_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c3s2_113953_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c3s2_114053_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c3s2_118894_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c3s2_119069_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c5s2_114202_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c5s2_114449_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c5s2_114574_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c5s2_119424_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c5s2_119524_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c6s2_108043_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c6s2_108043_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c6s2_108093_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c6s2_108143_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0914_c6s2_113093_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0926_c1s4_054536_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0926_c1s4_061611_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0926_c1s4_061686_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0926_c2s2_111952_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0926_c2s2_119302_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0926_c2s2_119327_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0926_c3s2_115269_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0926_c3s2_115319_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0926_c4s4_060991_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0926_c4s4_061016_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0926_c5s2_122474_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0926_c5s2_122624_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0926_c6s2_109443_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0958_c1s6_025646_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0958_c2s3_068077_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0958_c2s3_068177_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0958_c3s3_074519_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0958_c5s3_074737_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0958_c6s4_000977_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0958_c6s4_001002_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0958_c6s4_001002_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0958_c6s4_001027_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c1s4_064686_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c1s4_065511_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c1s4_065611_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c1s4_065661_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c2s2_123077_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c2s2_123202_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c3s2_124919_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c3s2_125219_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c5s2_125624_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c5s2_125649_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c5s2_125799_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c5s2_125874_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c6s2_119093_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c6s2_119143_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c6s2_119143_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0984_c6s2_119218_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0986_c1s4_064786_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0986_c2s2_123452_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0986_c2s2_123602_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0986_c3s2_125044_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0986_c5s2_125649_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0986_c5s2_125874_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0986_c6s2_118968_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0986_c6s2_118993_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0986_c6s2_119093_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0986_c6s2_119168_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0986_c6s2_119193_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0986_c6s2_119268_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c1s4_066761_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c1s4_066811_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c1s4_066836_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c1s5_014186_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c1s5_014236_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c1s5_014261_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c1s5_014361_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c2s2_124202_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c2s2_124227_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c2s2_146827_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c3s2_127419_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c3s2_127469_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c3s2_127494_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c3s2_127544_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c3s2_149569_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c3s2_149594_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c4s5_013479_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c4s5_013479_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c4s5_013579_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c4s5_013579_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c4s5_013604_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c4s5_013654_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c5s2_127824_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c5s2_127899_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c5s2_127899_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c5s2_127999_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c5s2_149924_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0992_c5s2_150024_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c1s4_067611_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c1s4_067636_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c3s2_127894_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c3s2_127919_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c3s2_127969_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c3s2_127994_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c4s4_067616_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c5s2_128524_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c5s2_128699_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c6s2_121943_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c6s2_121968_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c6s2_122018_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c6s2_122068_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c6s2_122143_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/0994_c6s2_122193_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c1s5_010711_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c1s5_010736_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c1s5_019236_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c1s5_019261_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c1s5_019261_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c2s2_143077_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c2s2_143152_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c2s2_151652_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c2s2_151702_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c2s2_151702_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c3s2_146344_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c3s2_146369_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c3s2_154394_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1088_c3s2_154419_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c2s2_142452_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c2s2_142502_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c2s2_142502_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c2s2_156327_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c2s2_156402_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c3s2_145669_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c3s2_145719_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c3s2_159044_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c3s2_159094_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c5s2_146099_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c6s3_007642_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c6s3_020892_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c6s3_020917_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1093_c6s3_020967_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c1s5_070316_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c1s5_070341_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c2s2_145677_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c2s2_145702_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c2s2_145802_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c2s3_037932_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c2s3_037957_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c3s2_148919_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c3s2_148944_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c3s2_148994_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c3s3_043778_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c5s2_149224_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c5s2_149224_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c6s3_010892_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c6s3_010917_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c6s3_067417_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1097_c6s3_067442_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c1s5_015261_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c1s5_015261_09.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c1s5_015286_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c1s5_015361_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c1s5_015386_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c1s5_015386_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c1s5_059141_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c1s5_059166_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c1s5_059191_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c1s5_059241_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c2s2_147802_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c2s2_147902_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c3s2_150569_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c3s2_150594_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c3s2_150669_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c3s3_033078_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c4s5_014679_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c4s5_014704_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c4s5_014729_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c4s5_014754_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c4s5_014754_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c4s5_059535_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c5s2_151024_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c5s2_151024_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c5s2_151049_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c5s2_151049_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c5s3_033715_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c5s3_033740_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c6s3_012442_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c6s3_012467_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c6s3_012467_09.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c6s3_056792_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c6s3_056817_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1107_c6s3_056817_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c1s5_029036_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c1s5_029086_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c1s5_029111_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c1s5_029161_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c2s2_160977_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c3s3_002837_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c3s3_002862_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c3s3_002912_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c5s3_003268_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c5s3_003268_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c5s3_003293_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c5s3_003293_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c5s3_030690_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c6s3_026567_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c6s3_026592_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1165_c6s3_026617_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1217_c1s5_040316_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1217_c1s5_040341_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1217_c2s3_007807_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1217_c2s3_007857_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1217_c2s3_007857_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1217_c3s3_014103_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c1s5_048366_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c1s5_048391_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c3s3_021228_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c3s3_021253_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c3s3_021278_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c3s3_021703_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c3s3_021728_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c5s3_022415_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c5s3_022415_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c6s3_044842_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c6s3_044867_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c6s3_044967_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c6s3_044992_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c6s3_045017_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c6s3_045267_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c6s3_045367_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c6s3_045442_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c6s3_045467_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1258_c6s3_045517_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c1s5_053491_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c2s3_020957_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c2s3_021007_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c2s3_021007_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c2s3_021032_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c2s3_030907_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c2s3_030957_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c3s3_027328_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c3s3_027378_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c3s3_036703_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c3s3_036728_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c3s3_036753_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c5s3_027665_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c6s3_051117_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c6s3_051142_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c6s3_060317_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c6s3_060342_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1281_c6s3_060367_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c1s5_057791_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c2s3_025257_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c2s3_025332_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c2s3_031482_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c2s3_031482_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c2s3_031482_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c2s3_031507_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c3s3_031603_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c3s3_031628_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c3s3_037403_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c3s3_037428_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c5s3_031965_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c6s3_055317_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c6s3_061042_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1296_c6s3_061067_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1330_c1s5_063266_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1330_c1s5_063291_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1330_c1s5_063391_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1330_c3s3_036753_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1330_c3s3_036878_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1330_c4s5_062560_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1330_c5s3_037340_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1330_c5s3_037365_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c1s5_064841_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c1s5_064866_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c1s5_068566_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c1s5_068641_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c1s5_068691_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c2s3_032357_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c2s3_032382_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c2s3_036182_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c2s3_036282_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c3s3_038678_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c3s3_038703_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c3s3_042003_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c3s3_042078_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c5s3_039040_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c5s3_042840_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c5s3_042840_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c6s3_062392_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c6s3_062417_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c6s3_062417_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c6s3_062442_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c6s3_065667_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1338_c6s3_065692_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1386_c2s3_040657_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1386_c2s3_040782_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1386_c3s3_047078_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1386_c3s3_047103_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1386_c6s3_070817_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c1s5_074216_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c1s5_074216_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c1s6_006016_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c1s6_006016_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c1s6_006116_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c1s6_006141_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c2s3_041682_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c2s3_041682_09.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c2s3_041757_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c2s3_048632_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c2s3_048632_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c2s3_048732_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c3s3_048003_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c3s3_048053_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c3s3_054428_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c3s3_054478_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c3s3_054503_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c5s3_048415_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c5s3_055065_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c5s3_055090_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c6s3_071742_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c6s3_071792_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c6s3_078092_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1393_c6s3_078142_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c1s6_008341_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c1s6_020296_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c1s6_020371_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c2s3_050807_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c2s3_050832_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c3s3_057078_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c3s3_057153_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c3s3_068594_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c3s3_068619_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c3s3_068644_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c4s6_020066_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c5s3_057415_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c5s3_057415_13.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c5s3_057490_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c5s3_069287_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c5s3_069337_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c6s3_080842_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c6s3_080842_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c6s3_080867_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c6s3_080892_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c6s3_080917_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c6s3_092267_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c6s3_092342_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1443_c6s3_092367_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1445_c1s6_008316_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1445_c1s6_008366_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1445_c2s3_050732_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1445_c2s3_050757_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1445_c2s3_050807_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1445_c2s3_050832_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1445_c3s3_057078_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1445_c3s3_057103_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1445_c4s6_008810_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1445_c4s6_008885_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1445_c5s3_057615_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1445_c6s3_080992_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1445_c6s3_081017_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1469_c1s6_010916_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1469_c1s6_010941_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1469_c2s3_053282_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1469_c2s3_053382_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1469_c2s3_053482_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1469_c3s3_059728_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1469_c3s3_059753_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1469_c3s3_059778_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1469_c5s3_060065_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1469_c6s3_083467_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1469_c6s3_083492_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1469_c6s3_083517_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1475_c1s6_011866_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1475_c2s3_054282_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1475_c2s3_054282_07.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1475_c2s3_054307_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1475_c2s3_054407_05.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1475_c2s3_072027_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1475_c3s3_060603_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1475_c3s3_060653_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1475_c3s3_077819_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1475_c3s3_077844_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1475_c5s3_060940_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1475_c6s3_084342_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1475_c6s3_084367_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c1s6_014296_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c1s6_014446_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c1s6_014471_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c2s3_054732_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c2s3_054882_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c2s3_054932_06.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c2s3_054957_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c2s3_056952_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c3s3_061178_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c3s3_061203_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c3s3_062728_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c3s3_062753_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c3s3_062803_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c5s3_061490_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c5s3_063412_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c6s3_084942_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c6s3_086367_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1480_c6s3_086417_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c1s6_013121_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c1s6_013171_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c1s6_013246_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c2s3_055557_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c2s3_055557_08.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c2s3_055632_03.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c3s3_061953_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c3s3_061978_04.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c3s3_062003_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c5s3_062290_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c5s3_062290_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c5s3_062440_01.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c5s3_062440_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c6s3_085667_02.jpg"
        string_val: "./Market-1501-v15.09.15/bounding_box_train/1492_c6s3_085717_02.jpg"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1330
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1330
          }
        }
        tensor_content: "8\000\000\0008\000\000\0008\000\000\0008\000\000\0008\000\000\0008\000\000\0008\000\000\0008\000\000\0008\000\000\0008\000\000\0008\000\000\0008\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000F\000\000\000F\000\000\000F\000\000\000F\000\000\000F\000\000\000z\000\000\000z\000\000\000z\000\000\000z\000\000\000}\000\000\000}\000\000\000}\000\000\000}n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\n\001\000\000\nr\001\000\000r\001\000\000r\001\000\000r\001\000\000r\001\000\000r\001\000\000r\001\000\000r\001\000\000r\001\000\000r\001\000\000r\001\000\000r\001\000\000r\001\000\000r\001\000\000r\001\000\000r\001\000\000y\001\000\000y\001\000\000y\001\000\000y\001\000\000y\001\000\000y\001\000\000y\001\000\000y\001\000\000y\001\000\000y\001\000\000y\001\000\000y\001\000\000y\001\000\000yn\002\000\000\n\002\000\000\n\002\000\000\n\002\000\000\n\002\000\000\n\002\000\000\nf\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000f\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{\002\000\000{r\003\000\000\r\003\000\000\r\003\000\000\r\003\000\000\r\003\000\000\r\003\000\000\r\003\000\000\r\003\000\000\r\003\000\000\r\003\000\000\r\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000.\003\000\000`\003\000\000`\003\000\000`\003\000\000d\003\000\000d\003\000\000d\003\000\000d\003\000\000d\003\000\000d\003\000\000dj\005\000\000j\005\000\000j\005\000\000j\005\000\000j\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q\005\000\000q
      }
    }
  }
}
node {
  name: "fifo_queue_DequeueMany/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fifo_queue_DequeueMany"
  op: "QueueDequeueManyV2"
  input: "fifo_queue"
  input: "fifo_queue_DequeueMany/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 75
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "Squeeze"
  op: "Squeeze"
  input: "fifo_queue_DequeueMany"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "Squeeze_1"
  op: "Squeeze"
  input: "fifo_queue_DequeueMany:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2"
  op: "GatherV2"
  input: "Const"
  input: "Squeeze"
  input: "GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map/TensorArray"
  op: "TensorArrayV3"
  input: "map/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/TensorArrayUnstack/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map/TensorArrayUnstack/Shape"
  input: "map/TensorArrayUnstack/strided_slice/stack"
  input: "map/TensorArrayUnstack/strided_slice/stack_1"
  input: "map/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/range"
  op: "Range"
  input: "map/TensorArrayUnstack/range/start"
  input: "map/TensorArrayUnstack/strided_slice"
  input: "map/TensorArrayUnstack/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/TensorArray"
  input: "map/TensorArrayUnstack/range"
  input: "GatherV2"
  input: "map/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@GatherV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map/TensorArray_1"
  op: "TensorArrayV3"
  input: "map/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/while/maximum_iterations"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/Enter"
  op: "Enter"
  input: "map/while/iteration_counter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Enter_1"
  op: "Enter"
  input: "map/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Enter_2"
  op: "Enter"
  input: "map/TensorArray_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Merge"
  op: "Merge"
  input: "map/while/Enter"
  input: "map/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Merge_1"
  op: "Merge"
  input: "map/while/Enter_1"
  input: "map/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Merge_2"
  op: "Merge"
  input: "map/while/Enter_2"
  input: "map/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Less"
  op: "Less"
  input: "map/while/Merge"
  input: "map/while/Less/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Less/Enter"
  op: "Enter"
  input: "map/while/maximum_iterations"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Less_1/y"
  op: "Const"
  input: "^map/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map/while/Less_1"
  op: "Less"
  input: "map/while/Merge_1"
  input: "map/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map/while/Less"
  input: "map/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/LoopCond"
  op: "LoopCond"
  input: "map/while/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Switch"
  op: "Switch"
  input: "map/while/Merge"
  input: "map/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Switch_1"
  op: "Switch"
  input: "map/while/Merge_1"
  input: "map/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Switch_2"
  op: "Switch"
  input: "map/while/Merge_2"
  input: "map/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity"
  op: "Identity"
  input: "map/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity_1"
  op: "Identity"
  input: "map/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity_2"
  op: "Identity"
  input: "map/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/add/y"
  op: "Const"
  input: "^map/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/add"
  op: "Add"
  input: "map/while/Identity"
  input: "map/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map/while/TensorArrayReadV3/Enter"
  input: "map/while/Identity_1"
  input: "map/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/ReadFile"
  op: "ReadFile"
  input: "map/while/TensorArrayReadV3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/DecodeJpeg"
  op: "DecodeJpeg"
  input: "map/while/ReadFile"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map/while/Identity_1"
  input: "map/while/DecodeJpeg"
  input: "map/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/DecodeJpeg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/DecodeJpeg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/add_1/y"
  op: "Const"
  input: "^map/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/add_1"
  op: "Add"
  input: "map/while/Identity_1"
  input: "map/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/NextIteration"
  op: "NextIteration"
  input: "map/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/NextIteration_1"
  op: "NextIteration"
  input: "map/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/NextIteration_2"
  op: "NextIteration"
  input: "map/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Exit"
  op: "Exit"
  input: "map/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Exit_1"
  op: "Exit"
  input: "map/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Exit_2"
  op: "Exit"
  input: "map/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map/TensorArray_1"
  input: "map/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/range"
  op: "Range"
  input: "map/TensorArrayStack/range/start"
  input: "map/TensorArrayStack/TensorArraySizeV3"
  input: "map/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map/TensorArray_1"
  input: "map/TensorArrayStack/range"
  input: "map/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "resize_images/size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resize_images/ResizeBilinear"
  op: "ResizeBilinear"
  input: "map/TensorArrayStack/TensorArrayGatherV3"
  input: "resize_images/size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "map_1/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_1/TensorArray"
  op: "TensorArrayV3"
  input: "map_1/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "K\000\000\000\200\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map_1/TensorArrayUnstack/Shape"
  input: "map_1/TensorArrayUnstack/strided_slice/stack"
  input: "map_1/TensorArrayUnstack/strided_slice/stack_1"
  input: "map_1/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/range"
  op: "Range"
  input: "map_1/TensorArrayUnstack/range/start"
  input: "map_1/TensorArrayUnstack/strided_slice"
  input: "map_1/TensorArrayUnstack/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map_1/TensorArray"
  input: "map_1/TensorArrayUnstack/range"
  input: "resize_images/ResizeBilinear"
  input: "map_1/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resize_images/ResizeBilinear"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_1/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "map_1/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map_1/while/maximum_iterations"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_1/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_1/while/Enter"
  op: "Enter"
  input: "map_1/while/iteration_counter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/Enter_1"
  op: "Enter"
  input: "map_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/Enter_2"
  op: "Enter"
  input: "map_1/TensorArray_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/Merge"
  op: "Merge"
  input: "map_1/while/Enter"
  input: "map_1/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Merge_1"
  op: "Merge"
  input: "map_1/while/Enter_1"
  input: "map_1/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Merge_2"
  op: "Merge"
  input: "map_1/while/Enter_2"
  input: "map_1/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Less"
  op: "Less"
  input: "map_1/while/Merge"
  input: "map_1/while/Less/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Less/Enter"
  op: "Enter"
  input: "map_1/while/maximum_iterations"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/Less_1/y"
  op: "Const"
  input: "^map_1/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_1/while/Less_1"
  op: "Less"
  input: "map_1/while/Merge_1"
  input: "map_1/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map_1/while/Less"
  input: "map_1/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/LoopCond"
  op: "LoopCond"
  input: "map_1/while/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Switch"
  op: "Switch"
  input: "map_1/while/Merge"
  input: "map_1/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Switch_1"
  op: "Switch"
  input: "map_1/while/Merge_1"
  input: "map_1/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Switch_2"
  op: "Switch"
  input: "map_1/while/Merge_2"
  input: "map_1/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Identity"
  op: "Identity"
  input: "map_1/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Identity_1"
  op: "Identity"
  input: "map_1/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Identity_2"
  op: "Identity"
  input: "map_1/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/add/y"
  op: "Const"
  input: "^map_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/while/add"
  op: "Add"
  input: "map_1/while/Identity"
  input: "map_1/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map_1/while/TensorArrayReadV3/Enter"
  input: "map_1/while/Identity_1"
  input: "map_1/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map_1/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map_1/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/truediv/y"
  op: "Const"
  input: "^map_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "map_1/while/truediv"
  op: "RealDiv"
  input: "map_1/while/TensorArrayReadV3"
  input: "map_1/while/truediv/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map_1/while/Identity_1"
  input: "map_1/while/truediv"
  input: "map_1/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/while/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map_1/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/while/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/add_1/y"
  op: "Const"
  input: "^map_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/while/add_1"
  op: "Add"
  input: "map_1/while/Identity_1"
  input: "map_1/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/NextIteration"
  op: "NextIteration"
  input: "map_1/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/NextIteration_1"
  op: "NextIteration"
  input: "map_1/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/NextIteration_2"
  op: "NextIteration"
  input: "map_1/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Exit"
  op: "Exit"
  input: "map_1/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Exit_1"
  op: "Exit"
  input: "map_1/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Exit_2"
  op: "Exit"
  input: "map_1/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map_1/TensorArray_1"
  input: "map_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_1/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/TensorArrayStack/range"
  op: "Range"
  input: "map_1/TensorArrayStack/range/start"
  input: "map_1/TensorArrayStack/TensorArraySizeV3"
  input: "map_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map_1/TensorArray_1"
  input: "map_1/TensorArrayStack/range"
  input: "map_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "GatherV2_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_1"
  op: "GatherV2"
  input: "Const_1"
  input: "Squeeze"
  input: "GatherV2_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "GatherV2_2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_2"
  op: "GatherV2"
  input: "Const"
  input: "Squeeze_1"
  input: "GatherV2_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map_2/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_2/TensorArray"
  op: "TensorArrayV3"
  input: "map_2/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map_2/TensorArrayUnstack/Shape"
  input: "map_2/TensorArrayUnstack/strided_slice/stack"
  input: "map_2/TensorArrayUnstack/strided_slice/stack_1"
  input: "map_2/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/range"
  op: "Range"
  input: "map_2/TensorArrayUnstack/range/start"
  input: "map_2/TensorArrayUnstack/strided_slice"
  input: "map_2/TensorArrayUnstack/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map_2/TensorArray"
  input: "map_2/TensorArrayUnstack/range"
  input: "GatherV2_2"
  input: "map_2/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@GatherV2_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_2/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_2/TensorArray_1"
  op: "TensorArrayV3"
  input: "map_2/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map_2/while/maximum_iterations"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_2/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_2/while/Enter"
  op: "Enter"
  input: "map_2/while/iteration_counter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/Enter_1"
  op: "Enter"
  input: "map_2/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/Enter_2"
  op: "Enter"
  input: "map_2/TensorArray_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/Merge"
  op: "Merge"
  input: "map_2/while/Enter"
  input: "map_2/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Merge_1"
  op: "Merge"
  input: "map_2/while/Enter_1"
  input: "map_2/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Merge_2"
  op: "Merge"
  input: "map_2/while/Enter_2"
  input: "map_2/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Less"
  op: "Less"
  input: "map_2/while/Merge"
  input: "map_2/while/Less/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Less/Enter"
  op: "Enter"
  input: "map_2/while/maximum_iterations"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/Less_1/y"
  op: "Const"
  input: "^map_2/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_2/while/Less_1"
  op: "Less"
  input: "map_2/while/Merge_1"
  input: "map_2/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map_2/while/Less"
  input: "map_2/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/LoopCond"
  op: "LoopCond"
  input: "map_2/while/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Switch"
  op: "Switch"
  input: "map_2/while/Merge"
  input: "map_2/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Switch_1"
  op: "Switch"
  input: "map_2/while/Merge_1"
  input: "map_2/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Switch_2"
  op: "Switch"
  input: "map_2/while/Merge_2"
  input: "map_2/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Identity"
  op: "Identity"
  input: "map_2/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Identity_1"
  op: "Identity"
  input: "map_2/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Identity_2"
  op: "Identity"
  input: "map_2/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/add/y"
  op: "Const"
  input: "^map_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_2/while/add"
  op: "Add"
  input: "map_2/while/Identity"
  input: "map_2/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map_2/while/TensorArrayReadV3/Enter"
  input: "map_2/while/Identity_1"
  input: "map_2/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "map_2/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map_2/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/ReadFile"
  op: "ReadFile"
  input: "map_2/while/TensorArrayReadV3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/DecodeJpeg"
  op: "DecodeJpeg"
  input: "map_2/while/ReadFile"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "map_2/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map_2/while/Identity_1"
  input: "map_2/while/DecodeJpeg"
  input: "map_2/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/while/DecodeJpeg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map_2/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/while/DecodeJpeg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/add_1/y"
  op: "Const"
  input: "^map_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_2/while/add_1"
  op: "Add"
  input: "map_2/while/Identity_1"
  input: "map_2/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/NextIteration"
  op: "NextIteration"
  input: "map_2/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/NextIteration_1"
  op: "NextIteration"
  input: "map_2/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/NextIteration_2"
  op: "NextIteration"
  input: "map_2/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Exit"
  op: "Exit"
  input: "map_2/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Exit_1"
  op: "Exit"
  input: "map_2/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Exit_2"
  op: "Exit"
  input: "map_2/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map_2/TensorArray_1"
  input: "map_2/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_2/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_2/TensorArrayStack/range"
  op: "Range"
  input: "map_2/TensorArrayStack/range/start"
  input: "map_2/TensorArrayStack/TensorArraySizeV3"
  input: "map_2/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map_2/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map_2/TensorArray_1"
  input: "map_2/TensorArrayStack/range"
  input: "map_2/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "resize_images_1/size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resize_images_1/ResizeBilinear"
  op: "ResizeBilinear"
  input: "map_2/TensorArrayStack/TensorArrayGatherV3"
  input: "resize_images_1/size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "map_3/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_3/TensorArray"
  op: "TensorArrayV3"
  input: "map_3/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "K\000\000\000\200\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map_3/TensorArrayUnstack/Shape"
  input: "map_3/TensorArrayUnstack/strided_slice/stack"
  input: "map_3/TensorArrayUnstack/strided_slice/stack_1"
  input: "map_3/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/range"
  op: "Range"
  input: "map_3/TensorArrayUnstack/range/start"
  input: "map_3/TensorArrayUnstack/strided_slice"
  input: "map_3/TensorArrayUnstack/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map_3/TensorArray"
  input: "map_3/TensorArrayUnstack/range"
  input: "resize_images_1/ResizeBilinear"
  input: "map_3/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resize_images_1/ResizeBilinear"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_3/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_3/TensorArray_1"
  op: "TensorArrayV3"
  input: "map_3/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map_3/while/maximum_iterations"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_3/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_3/while/Enter"
  op: "Enter"
  input: "map_3/while/iteration_counter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/Enter_1"
  op: "Enter"
  input: "map_3/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/Enter_2"
  op: "Enter"
  input: "map_3/TensorArray_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/Merge"
  op: "Merge"
  input: "map_3/while/Enter"
  input: "map_3/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Merge_1"
  op: "Merge"
  input: "map_3/while/Enter_1"
  input: "map_3/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Merge_2"
  op: "Merge"
  input: "map_3/while/Enter_2"
  input: "map_3/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Less"
  op: "Less"
  input: "map_3/while/Merge"
  input: "map_3/while/Less/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Less/Enter"
  op: "Enter"
  input: "map_3/while/maximum_iterations"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/Less_1/y"
  op: "Const"
  input: "^map_3/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_3/while/Less_1"
  op: "Less"
  input: "map_3/while/Merge_1"
  input: "map_3/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map_3/while/Less"
  input: "map_3/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/LoopCond"
  op: "LoopCond"
  input: "map_3/while/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Switch"
  op: "Switch"
  input: "map_3/while/Merge"
  input: "map_3/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Switch_1"
  op: "Switch"
  input: "map_3/while/Merge_1"
  input: "map_3/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Switch_2"
  op: "Switch"
  input: "map_3/while/Merge_2"
  input: "map_3/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Identity"
  op: "Identity"
  input: "map_3/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Identity_1"
  op: "Identity"
  input: "map_3/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Identity_2"
  op: "Identity"
  input: "map_3/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/add/y"
  op: "Const"
  input: "^map_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_3/while/add"
  op: "Add"
  input: "map_3/while/Identity"
  input: "map_3/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map_3/while/TensorArrayReadV3/Enter"
  input: "map_3/while/Identity_1"
  input: "map_3/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map_3/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map_3/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/truediv/y"
  op: "Const"
  input: "^map_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "map_3/while/truediv"
  op: "RealDiv"
  input: "map_3/while/TensorArrayReadV3"
  input: "map_3/while/truediv/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map_3/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map_3/while/Identity_1"
  input: "map_3/while/truediv"
  input: "map_3/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/while/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map_3/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/while/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/add_1/y"
  op: "Const"
  input: "^map_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_3/while/add_1"
  op: "Add"
  input: "map_3/while/Identity_1"
  input: "map_3/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/NextIteration"
  op: "NextIteration"
  input: "map_3/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/NextIteration_1"
  op: "NextIteration"
  input: "map_3/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/NextIteration_2"
  op: "NextIteration"
  input: "map_3/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Exit"
  op: "Exit"
  input: "map_3/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Exit_1"
  op: "Exit"
  input: "map_3/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Exit_2"
  op: "Exit"
  input: "map_3/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map_3/TensorArray_1"
  input: "map_3/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_3/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_3/TensorArrayStack/range"
  op: "Range"
  input: "map_3/TensorArrayStack/range/start"
  input: "map_3/TensorArrayStack/TensorArraySizeV3"
  input: "map_3/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map_3/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map_3/TensorArray_1"
  input: "map_3/TensorArrayStack/range"
  input: "map_3/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "GatherV2_3/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_3"
  op: "GatherV2"
  input: "Const_1"
  input: "Squeeze_1"
  input: "GatherV2_3/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "map_1/TensorArrayStack/TensorArrayGatherV3"
  input: "map_3/TensorArrayStack/TensorArrayGatherV3"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv1_1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv1_1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv1_1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1_1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv1_1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv1_1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv1_1/weights/Initializer/truncated_normal/mul"
  input: "conv1_1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_1/weights/Assign"
  op: "Assign"
  input: "conv1_1/weights"
  input: "conv1_1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_1/weights/read"
  op: "Identity"
  input: "conv1_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv1_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv1_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv1_1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv1_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1_1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv1_1/Conv2D"
  op: "Conv2D"
  input: "concat"
  input: "conv1_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/beta/Assign"
  op: "Assign"
  input: "conv1_1/conv1_1/bn/beta"
  input: "conv1_1/conv1_1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/beta/read"
  op: "Identity"
  input: "conv1_1/conv1_1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv1_1/conv1_1/bn/moving_mean"
  input: "conv1_1/conv1_1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv1_1/conv1_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv1_1/conv1_1/bn/moving_variance"
  input: "conv1_1/conv1_1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv1_1/conv1_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv1_1/Conv2D"
  input: "conv1_1/conv1_1/bn/Const"
  input: "conv1_1/conv1_1/bn/beta/read"
  input: "conv1_1/conv1_1/bn/moving_mean/read"
  input: "conv1_1/conv1_1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "conv1_1/Elu"
  op: "Elu"
  input: "conv1_1/conv1_1/bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv1_2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv1_2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv1_2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1_2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv1_2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv1_2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv1_2/weights/Initializer/truncated_normal/mul"
  input: "conv1_2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_2/weights/Assign"
  op: "Assign"
  input: "conv1_2/weights"
  input: "conv1_2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_2/weights/read"
  op: "Identity"
  input: "conv1_2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv1_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv1_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv1_2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv1_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1_2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv1_2/Conv2D"
  op: "Conv2D"
  input: "conv1_1/Elu"
  input: "conv1_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/beta/Assign"
  op: "Assign"
  input: "conv1_2/conv1_2/bn/beta"
  input: "conv1_2/conv1_2/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/beta/read"
  op: "Identity"
  input: "conv1_2/conv1_2/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv1_2/conv1_2/bn/moving_mean"
  input: "conv1_2/conv1_2/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_mean/read"
  op: "Identity"
  input: "conv1_2/conv1_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv1_2/conv1_2/bn/moving_variance"
  input: "conv1_2/conv1_2/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_variance/read"
  op: "Identity"
  input: "conv1_2/conv1_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv1_2/Conv2D"
  input: "conv1_2/conv1_2/bn/Const"
  input: "conv1_2/conv1_2/bn/beta/read"
  input: "conv1_2/conv1_2/bn/moving_mean/read"
  input: "conv1_2/conv1_2/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "conv1_2/Elu"
  op: "Elu"
  input: "conv1_2/conv1_2/bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pool1/MaxPool"
  op: "MaxPool"
  input: "conv1_2/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2_1/1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2_1/1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_1/1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv2_1/1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2_1/1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2_1/1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2_1/1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2_1/1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv2_1/1/weights/Initializer/truncated_normal/mul"
  input: "conv2_1/1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_1/1/weights/Assign"
  op: "Assign"
  input: "conv2_1/1/weights"
  input: "conv2_1/1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/1/weights/read"
  op: "Identity"
  input: "conv2_1/1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv2_1/1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv2_1/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv2_1/1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv2_1/1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2_1/1/Conv2D"
  op: "Conv2D"
  input: "pool1/MaxPool"
  input: "conv2_1/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/beta/Assign"
  op: "Assign"
  input: "conv2_1/1/conv2_1/1/bn/beta"
  input: "conv2_1/1/conv2_1/1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/beta/read"
  op: "Identity"
  input: "conv2_1/1/conv2_1/1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_mean/read"
  op: "Identity"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_variance/read"
  op: "Identity"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2_1/1/Conv2D"
  input: "conv2_1/1/conv2_1/1/bn/Const"
  input: "conv2_1/1/conv2_1/1/bn/beta/read"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean/read"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "conv2_1/1/Elu"
  op: "Elu"
  input: "conv2_1/1/conv2_1/1/bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Dropout/Identity"
  op: "Identity"
  input: "conv2_1/1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2_1/2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_1/2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv2_1/2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2_1/2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2_1/2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2_1/2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2_1/2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv2_1/2/weights/Initializer/truncated_normal/mul"
  input: "conv2_1/2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_1/2/weights/Assign"
  op: "Assign"
  input: "conv2_1/2/weights"
  input: "conv2_1/2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/2/weights/read"
  op: "Identity"
  input: "conv2_1/2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv2_1/2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv2_1/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv2_1/2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv2_1/2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_1/2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_1/2/biases/Assign"
  op: "Assign"
  input: "conv2_1/2/biases"
  input: "conv2_1/2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/2/biases/read"
  op: "Identity"
  input: "conv2_1/2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2_1/2/Conv2D"
  op: "Conv2D"
  input: "Dropout/Identity"
  input: "conv2_1/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/2/BiasAdd"
  op: "BiasAdd"
  input: "conv2_1/2/Conv2D"
  input: "conv2_1/2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "pool1/MaxPool"
  input: "conv2_1/2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2_3/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/bn/beta/Assign"
  op: "Assign"
  input: "conv2_3/bn/beta"
  input: "conv2_3/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/bn/beta/read"
  op: "Identity"
  input: "conv2_3/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv2_3/bn/moving_mean"
  input: "conv2_3/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/bn/moving_mean/read"
  op: "Identity"
  input: "conv2_3/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2_3/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv2_3/bn/moving_variance"
  input: "conv2_3/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/bn/moving_variance/read"
  op: "Identity"
  input: "conv2_3/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add"
  input: "conv2_3/bn/Const"
  input: "conv2_3/bn/beta/read"
  input: "conv2_3/bn/moving_mean/read"
  input: "conv2_3/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv2_3/bn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Elu"
  op: "Elu"
  input: "conv2_3/bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2_3/1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv2_3/1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2_3/1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2_3/1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2_3/1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2_3/1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv2_3/1/weights/Initializer/truncated_normal/mul"
  input: "conv2_3/1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/1/weights/Assign"
  op: "Assign"
  input: "conv2_3/1/weights"
  input: "conv2_3/1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/1/weights/read"
  op: "Identity"
  input: "conv2_3/1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv2_3/1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv2_3/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv2_3/1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv2_3/1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2_3/1/Conv2D"
  op: "Conv2D"
  input: "Elu"
  input: "conv2_3/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/beta/Assign"
  op: "Assign"
  input: "conv2_3/1/conv2_3/1/bn/beta"
  input: "conv2_3/1/conv2_3/1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/beta/read"
  op: "Identity"
  input: "conv2_3/1/conv2_3/1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_mean/read"
  op: "Identity"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_variance/read"
  op: "Identity"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2_3/1/Conv2D"
  input: "conv2_3/1/conv2_3/1/bn/Const"
  input: "conv2_3/1/conv2_3/1/bn/beta/read"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean/read"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "conv2_3/1/Elu"
  op: "Elu"
  input: "conv2_3/1/conv2_3/1/bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Dropout_1/Identity"
  op: "Identity"
  input: "conv2_3/1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2_3/2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv2_3/2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2_3/2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2_3/2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2_3/2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2_3/2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv2_3/2/weights/Initializer/truncated_normal/mul"
  input: "conv2_3/2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/2/weights/Assign"
  op: "Assign"
  input: "conv2_3/2/weights"
  input: "conv2_3/2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/2/weights/read"
  op: "Identity"
  input: "conv2_3/2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv2_3/2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv2_3/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv2_3/2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv2_3/2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/2/biases/Assign"
  op: "Assign"
  input: "conv2_3/2/biases"
  input: "conv2_3/2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/2/biases/read"
  op: "Identity"
  input: "conv2_3/2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2_3/2/Conv2D"
  op: "Conv2D"
  input: "Dropout_1/Identity"
  input: "conv2_3/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/2/BiasAdd"
  op: "BiasAdd"
  input: "conv2_3/2/Conv2D"
  input: "conv2_3/2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "add"
  input: "conv2_3/2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/bn/beta/Assign"
  op: "Assign"
  input: "conv3_1/bn/beta"
  input: "conv3_1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/bn/beta/read"
  op: "Identity"
  input: "conv3_1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv3_1/bn/moving_mean"
  input: "conv3_1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv3_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv3_1/bn/moving_variance"
  input: "conv3_1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv3_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_1"
  input: "conv3_1/bn/Const"
  input: "conv3_1/bn/beta/read"
  input: "conv3_1/bn/moving_mean/read"
  input: "conv3_1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv3_1/bn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Elu_1"
  op: "Elu"
  input: "conv3_1/bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_1/1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv3_1/1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv3_1/1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3_1/1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv3_1/1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv3_1/1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv3_1/1/weights/Initializer/truncated_normal/mul"
  input: "conv3_1/1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/1/weights/Assign"
  op: "Assign"
  input: "conv3_1/1/weights"
  input: "conv3_1/1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/1/weights/read"
  op: "Identity"
  input: "conv3_1/1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv3_1/1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv3_1/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv3_1/1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv3_1/1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_1/1/Conv2D"
  op: "Conv2D"
  input: "Elu_1"
  input: "conv3_1/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/beta/Assign"
  op: "Assign"
  input: "conv3_1/1/conv3_1/1/bn/beta"
  input: "conv3_1/1/conv3_1/1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/beta/read"
  op: "Identity"
  input: "conv3_1/1/conv3_1/1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_mean/read"
  op: "Identity"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_variance/read"
  op: "Identity"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv3_1/1/Conv2D"
  input: "conv3_1/1/conv3_1/1/bn/Const"
  input: "conv3_1/1/conv3_1/1/bn/beta/read"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean/read"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "conv3_1/1/Elu"
  op: "Elu"
  input: "conv3_1/1/conv3_1/1/bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Dropout_2/Identity"
  op: "Identity"
  input: "conv3_1/1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_1/2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv3_1/2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv3_1/2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3_1/2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv3_1/2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv3_1/2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv3_1/2/weights/Initializer/truncated_normal/mul"
  input: "conv3_1/2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/2/weights/Assign"
  op: "Assign"
  input: "conv3_1/2/weights"
  input: "conv3_1/2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/2/weights/read"
  op: "Identity"
  input: "conv3_1/2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv3_1/2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv3_1/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv3_1/2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv3_1/2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/2/biases/Assign"
  op: "Assign"
  input: "conv3_1/2/biases"
  input: "conv3_1/2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/2/biases/read"
  op: "Identity"
  input: "conv3_1/2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_1/2/Conv2D"
  op: "Conv2D"
  input: "Dropout_2/Identity"
  input: "conv3_1/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/2/BiasAdd"
  op: "BiasAdd"
  input: "conv3_1/2/Conv2D"
  input: "conv3_1/2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv3_1/projection/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_1/projection/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/projection/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv3_1/projection/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv3_1/projection/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3_1/projection/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv3_1/projection/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv3_1/projection/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/projection/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv3_1/projection/weights/Initializer/truncated_normal/mul"
  input: "conv3_1/projection/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/projection/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/projection/weights/Assign"
  op: "Assign"
  input: "conv3_1/projection/weights"
  input: "conv3_1/projection/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/projection/weights/read"
  op: "Identity"
  input: "conv3_1/projection/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/projection/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv3_1/projection/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv3_1/projection/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_1/projection/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv3_1/projection/kernel/Regularizer/l2_regularizer/scale"
  input: "conv3_1/projection/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_1/projection/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_1/projection/Conv2D"
  op: "Conv2D"
  input: "add_1"
  input: "conv3_1/projection/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "conv3_1/projection/Conv2D"
  input: "conv3_1/2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_3/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/bn/beta/Assign"
  op: "Assign"
  input: "conv3_3/bn/beta"
  input: "conv3_3/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/bn/beta/read"
  op: "Identity"
  input: "conv3_3/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv3_3/bn/moving_mean"
  input: "conv3_3/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/bn/moving_mean/read"
  op: "Identity"
  input: "conv3_3/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_3/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv3_3/bn/moving_variance"
  input: "conv3_3/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/bn/moving_variance/read"
  op: "Identity"
  input: "conv3_3/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_2"
  input: "conv3_3/bn/Const"
  input: "conv3_3/bn/beta/read"
  input: "conv3_3/bn/moving_mean/read"
  input: "conv3_3/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv3_3/bn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Elu_2"
  op: "Elu"
  input: "conv3_3/bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_3/1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv3_3/1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv3_3/1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3_3/1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv3_3/1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv3_3/1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv3_3/1/weights/Initializer/truncated_normal/mul"
  input: "conv3_3/1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/1/weights/Assign"
  op: "Assign"
  input: "conv3_3/1/weights"
  input: "conv3_3/1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/1/weights/read"
  op: "Identity"
  input: "conv3_3/1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv3_3/1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv3_3/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv3_3/1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv3_3/1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_3/1/Conv2D"
  op: "Conv2D"
  input: "Elu_2"
  input: "conv3_3/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/beta/Assign"
  op: "Assign"
  input: "conv3_3/1/conv3_3/1/bn/beta"
  input: "conv3_3/1/conv3_3/1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/beta/read"
  op: "Identity"
  input: "conv3_3/1/conv3_3/1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_mean/read"
  op: "Identity"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_variance/read"
  op: "Identity"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv3_3/1/Conv2D"
  input: "conv3_3/1/conv3_3/1/bn/Const"
  input: "conv3_3/1/conv3_3/1/bn/beta/read"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean/read"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "conv3_3/1/Elu"
  op: "Elu"
  input: "conv3_3/1/conv3_3/1/bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Dropout_3/Identity"
  op: "Identity"
  input: "conv3_3/1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_3/2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv3_3/2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv3_3/2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3_3/2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv3_3/2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv3_3/2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv3_3/2/weights/Initializer/truncated_normal/mul"
  input: "conv3_3/2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/2/weights/Assign"
  op: "Assign"
  input: "conv3_3/2/weights"
  input: "conv3_3/2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/2/weights/read"
  op: "Identity"
  input: "conv3_3/2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv3_3/2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv3_3/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv3_3/2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv3_3/2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/2/biases/Assign"
  op: "Assign"
  input: "conv3_3/2/biases"
  input: "conv3_3/2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/2/biases/read"
  op: "Identity"
  input: "conv3_3/2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_3/2/Conv2D"
  op: "Conv2D"
  input: "Dropout_3/Identity"
  input: "conv3_3/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/2/BiasAdd"
  op: "BiasAdd"
  input: "conv3_3/2/Conv2D"
  input: "conv3_3/2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "add_2"
  input: "conv3_3/2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/bn/beta/Assign"
  op: "Assign"
  input: "conv4_1/bn/beta"
  input: "conv4_1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/bn/beta/read"
  op: "Identity"
  input: "conv4_1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv4_1/bn/moving_mean"
  input: "conv4_1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv4_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv4_1/bn/moving_variance"
  input: "conv4_1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv4_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_3"
  input: "conv4_1/bn/Const"
  input: "conv4_1/bn/beta/read"
  input: "conv4_1/bn/moving_mean/read"
  input: "conv4_1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv4_1/bn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Elu_3"
  op: "Elu"
  input: "conv4_1/bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_1/1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv4_1/1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv4_1/1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_1/1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv4_1/1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv4_1/1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv4_1/1/weights/Initializer/truncated_normal/mul"
  input: "conv4_1/1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/1/weights/Assign"
  op: "Assign"
  input: "conv4_1/1/weights"
  input: "conv4_1/1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/1/weights/read"
  op: "Identity"
  input: "conv4_1/1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv4_1/1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv4_1/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv4_1/1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv4_1/1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_1/1/Conv2D"
  op: "Conv2D"
  input: "Elu_3"
  input: "conv4_1/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/beta/Assign"
  op: "Assign"
  input: "conv4_1/1/conv4_1/1/bn/beta"
  input: "conv4_1/1/conv4_1/1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/beta/read"
  op: "Identity"
  input: "conv4_1/1/conv4_1/1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_mean/read"
  op: "Identity"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_variance/read"
  op: "Identity"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv4_1/1/Conv2D"
  input: "conv4_1/1/conv4_1/1/bn/Const"
  input: "conv4_1/1/conv4_1/1/bn/beta/read"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean/read"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "conv4_1/1/Elu"
  op: "Elu"
  input: "conv4_1/1/conv4_1/1/bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Dropout_4/Identity"
  op: "Identity"
  input: "conv4_1/1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_1/2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv4_1/2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv4_1/2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_1/2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv4_1/2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv4_1/2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv4_1/2/weights/Initializer/truncated_normal/mul"
  input: "conv4_1/2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/2/weights/Assign"
  op: "Assign"
  input: "conv4_1/2/weights"
  input: "conv4_1/2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/2/weights/read"
  op: "Identity"
  input: "conv4_1/2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv4_1/2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv4_1/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv4_1/2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv4_1/2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/2/biases/Assign"
  op: "Assign"
  input: "conv4_1/2/biases"
  input: "conv4_1/2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/2/biases/read"
  op: "Identity"
  input: "conv4_1/2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_1/2/Conv2D"
  op: "Conv2D"
  input: "Dropout_4/Identity"
  input: "conv4_1/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/2/BiasAdd"
  op: "BiasAdd"
  input: "conv4_1/2/Conv2D"
  input: "conv4_1/2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv4_1/projection/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_1/projection/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/projection/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv4_1/projection/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv4_1/projection/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_1/projection/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv4_1/projection/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv4_1/projection/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/projection/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv4_1/projection/weights/Initializer/truncated_normal/mul"
  input: "conv4_1/projection/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/projection/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/projection/weights/Assign"
  op: "Assign"
  input: "conv4_1/projection/weights"
  input: "conv4_1/projection/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/projection/weights/read"
  op: "Identity"
  input: "conv4_1/projection/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/projection/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv4_1/projection/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv4_1/projection/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_1/projection/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv4_1/projection/kernel/Regularizer/l2_regularizer/scale"
  input: "conv4_1/projection/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_1/projection/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_1/projection/Conv2D"
  op: "Conv2D"
  input: "add_3"
  input: "conv4_1/projection/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_4"
  op: "Add"
  input: "conv4_1/projection/Conv2D"
  input: "conv4_1/2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_3/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/bn/beta/Assign"
  op: "Assign"
  input: "conv4_3/bn/beta"
  input: "conv4_3/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/bn/beta/read"
  op: "Identity"
  input: "conv4_3/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv4_3/bn/moving_mean"
  input: "conv4_3/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/bn/moving_mean/read"
  op: "Identity"
  input: "conv4_3/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_3/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv4_3/bn/moving_variance"
  input: "conv4_3/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/bn/moving_variance/read"
  op: "Identity"
  input: "conv4_3/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_4"
  input: "conv4_3/bn/Const"
  input: "conv4_3/bn/beta/read"
  input: "conv4_3/bn/moving_mean/read"
  input: "conv4_3/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv4_3/bn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Elu_4"
  op: "Elu"
  input: "conv4_3/bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_3/1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv4_3/1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv4_3/1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_3/1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv4_3/1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv4_3/1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv4_3/1/weights/Initializer/truncated_normal/mul"
  input: "conv4_3/1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/1/weights/Assign"
  op: "Assign"
  input: "conv4_3/1/weights"
  input: "conv4_3/1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/1/weights/read"
  op: "Identity"
  input: "conv4_3/1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv4_3/1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv4_3/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv4_3/1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv4_3/1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_3/1/Conv2D"
  op: "Conv2D"
  input: "Elu_4"
  input: "conv4_3/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/beta/Assign"
  op: "Assign"
  input: "conv4_3/1/conv4_3/1/bn/beta"
  input: "conv4_3/1/conv4_3/1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/beta/read"
  op: "Identity"
  input: "conv4_3/1/conv4_3/1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_mean/read"
  op: "Identity"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_variance/read"
  op: "Identity"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv4_3/1/Conv2D"
  input: "conv4_3/1/conv4_3/1/bn/Const"
  input: "conv4_3/1/conv4_3/1/bn/beta/read"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean/read"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "conv4_3/1/Elu"
  op: "Elu"
  input: "conv4_3/1/conv4_3/1/bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Dropout_5/Identity"
  op: "Identity"
  input: "conv4_3/1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_3/2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv4_3/2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv4_3/2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_3/2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv4_3/2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv4_3/2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv4_3/2/weights/Initializer/truncated_normal/mul"
  input: "conv4_3/2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/2/weights/Assign"
  op: "Assign"
  input: "conv4_3/2/weights"
  input: "conv4_3/2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/2/weights/read"
  op: "Identity"
  input: "conv4_3/2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv4_3/2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv4_3/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv4_3/2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv4_3/2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/2/biases/Assign"
  op: "Assign"
  input: "conv4_3/2/biases"
  input: "conv4_3/2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/2/biases/read"
  op: "Identity"
  input: "conv4_3/2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_3/2/Conv2D"
  op: "Conv2D"
  input: "Dropout_5/Identity"
  input: "conv4_3/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/2/BiasAdd"
  op: "BiasAdd"
  input: "conv4_3/2/Conv2D"
  input: "conv4_3/2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "add_5"
  op: "Add"
  input: "add_4"
  input: "conv4_3/2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Flatten/flatten/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\226\000\000\000\020\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Flatten/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Flatten/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Flatten/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Flatten/flatten/strided_slice"
  op: "StridedSlice"
  input: "Flatten/flatten/Shape"
  input: "Flatten/flatten/strided_slice/stack"
  input: "Flatten/flatten/strided_slice/stack_1"
  input: "Flatten/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Flatten/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Flatten/flatten/Reshape/shape"
  op: "Pack"
  input: "Flatten/flatten/strided_slice"
  input: "Flatten/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Flatten/flatten/Reshape"
  op: "Reshape"
  input: "add_5"
  input: "Flatten/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "Dropout_6/Identity"
  op: "Identity"
  input: "Flatten/flatten/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "fc1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000@\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fc1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fc1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "fc1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "fc1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "fc1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "fc1/weights/Initializer/truncated_normal/mul"
  input: "fc1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16384
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc1/weights/Assign"
  op: "Assign"
  input: "fc1/weights"
  input: "fc1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc1/weights/read"
  op: "Identity"
  input: "fc1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "fc1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "fc1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "fc1/kernel/Regularizer/l2_regularizer/scale"
  input: "fc1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc1/MatMul"
  op: "MatMul"
  input: "Dropout_6/Identity"
  input: "fc1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc1/fc1/bn/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/Reshape"
  op: "Reshape"
  input: "fc1/MatMul"
  input: "fc1/fc1/bn/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc1/fc1/bn/beta/Assign"
  op: "Assign"
  input: "fc1/fc1/bn/beta"
  input: "fc1/fc1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc1/fc1/bn/beta/read"
  op: "Identity"
  input: "fc1/fc1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_mean/Assign"
  op: "Assign"
  input: "fc1/fc1/bn/moving_mean"
  input: "fc1/fc1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_mean/read"
  op: "Identity"
  input: "fc1/fc1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_variance/Assign"
  op: "Assign"
  input: "fc1/fc1/bn/moving_variance"
  input: "fc1/fc1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_variance/read"
  op: "Identity"
  input: "fc1/fc1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "fc1/fc1/bn/Reshape"
  input: "fc1/fc1/bn/Const"
  input: "fc1/fc1/bn/beta/read"
  input: "fc1/fc1/bn/moving_mean/read"
  input: "fc1/fc1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "fc1/fc1/bn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/Reshape_1"
  op: "Reshape"
  input: "fc1/fc1/bn/FusedBatchNorm"
  input: "fc1/fc1/bn/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/Elu"
  op: "Elu"
  input: "fc1/fc1/bn/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize/Square"
  op: "Square"
  input: "fc1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize/Sum"
  op: "Sum"
  input: "l2_normalize/Square"
  input: "l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize/Maximum"
  op: "Maximum"
  input: "l2_normalize/Sum"
  input: "l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize"
  op: "Mul"
  input: "fc1/Elu"
  input: "l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ball/mean_vectors/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\336\005\000\000"
      }
    }
  }
}
node {
  name: "ball/mean_vectors/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ball/mean_vectors/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ball/mean_vectors/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "ball/mean_vectors/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ball/mean_vectors/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "ball/mean_vectors/Initializer/truncated_normal/TruncatedNormal"
  input: "ball/mean_vectors/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "ball/mean_vectors/Initializer/truncated_normal"
  op: "Add"
  input: "ball/mean_vectors/Initializer/truncated_normal/mul"
  input: "ball/mean_vectors/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "ball/mean_vectors"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1502
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ball/mean_vectors/Assign"
  op: "Assign"
  input: "ball/mean_vectors"
  input: "ball/mean_vectors/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ball/mean_vectors/read"
  op: "Identity"
  input: "ball/mean_vectors"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "ball/scale/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ball/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ball/scale/Assign"
  op: "Assign"
  input: "ball/scale"
  input: "ball/scale/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ball/scale/read"
  op: "Identity"
  input: "ball/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ball/scale/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "ball/scale/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ball/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ball/scale/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ball/scale/Regularizer/l2_regularizer/scale"
  input: "ball/scale/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ball/Softplus"
  op: "Softplus"
  input: "ball/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "l2_normalize_1/Square"
  op: "Square"
  input: "ball/mean_vectors/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_1/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "l2_normalize_1/Sum"
  op: "Sum"
  input: "l2_normalize_1/Square"
  input: "l2_normalize_1/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_1/Maximum"
  op: "Maximum"
  input: "l2_normalize_1/Sum"
  input: "l2_normalize_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_1/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_1"
  op: "Mul"
  input: "ball/mean_vectors/read"
  input: "l2_normalize_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "l2_normalize"
  input: "l2_normalize_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "ball/Softplus"
  input: "MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "K\000\000\000\200\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Slice/size/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Slice/size"
  op: "Pack"
  input: "strided_slice"
  input: "Slice/size/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "l2_normalize"
  input: "Slice/begin"
  input: "Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Slice_1/begin/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Slice_1/begin"
  op: "Pack"
  input: "strided_slice"
  input: "Slice_1/begin/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "Slice_1"
  op: "Slice"
  input: "l2_normalize"
  input: "Slice_1/begin"
  input: "Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "GatherV2_3"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "Reshape"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "Cast_1/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "Cast"
  input: "Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Minimum"
  op: "Minimum"
  input: "Cast_1"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_2/Square"
  op: "Square"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_2/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_2/Sum"
  op: "Sum"
  input: "l2_normalize_2/Square"
  input: "l2_normalize_2/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_2/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_2/Maximum"
  op: "Maximum"
  input: "l2_normalize_2/Sum"
  input: "l2_normalize_2/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_2/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_2"
  op: "Mul"
  input: "Slice"
  input: "l2_normalize_2/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_3/Square"
  op: "Square"
  input: "Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_3/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_3/Sum"
  op: "Sum"
  input: "l2_normalize_3/Square"
  input: "l2_normalize_3/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_3/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_3/Maximum"
  op: "Maximum"
  input: "l2_normalize_3/Sum"
  input: "l2_normalize_3/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_3/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_3"
  op: "Mul"
  input: "Slice_1"
  input: "l2_normalize_3/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "transpose/Rank"
  op: "Rank"
  input: "l2_normalize_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transpose/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "transpose/sub"
  op: "Sub"
  input: "transpose/Rank"
  input: "transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transpose/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transpose/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "transpose/Range"
  op: "Range"
  input: "transpose/Range/start"
  input: "transpose/Rank"
  input: "transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transpose/sub_1"
  op: "Sub"
  input: "transpose/sub"
  input: "transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "l2_normalize_3"
  input: "transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "MatMul_1"
  op: "MatMul"
  input: "l2_normalize_2"
  input: "transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "Const_2"
  input: "MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Neg"
  op: "Neg"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Exp"
  op: "Exp"
  input: "Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "TopKV2/k"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TopKV2"
  op: "TopKV2"
  input: "Exp"
  input: "TopKV2/k"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "GatherV2_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_4"
  op: "GatherV2"
  input: "GatherV2_3"
  input: "TopKV2:1"
  input: "GatherV2_4/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Equal_1"
  op: "Equal"
  input: "GatherV2_4"
  input: "Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Cast_2"
  op: "Cast"
  input: "Equal_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "Cast_2"
  input: "Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "Sum_1"
  input: "Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean/total/Assign"
  op: "Assign"
  input: "mean/total"
  input: "mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean/total/read"
  op: "Identity"
  input: "mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean/count/Assign"
  op: "Assign"
  input: "mean/count"
  input: "mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean/count/read"
  op: "Identity"
  input: "mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "mean/ToFloat"
  op: "Cast"
  input: "mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean/Sum"
  op: "Sum"
  input: "truediv"
  input: "mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean/AssignAdd"
  op: "AssignAdd"
  input: "mean/total"
  input: "mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean/AssignAdd_1"
  op: "AssignAdd"
  input: "mean/count"
  input: "mean/ToFloat"
  input: "^truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean/truediv"
  op: "RealDiv"
  input: "mean/total/read"
  input: "mean/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/Greater"
  op: "Greater"
  input: "mean/count/read"
  input: "mean/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/value"
  op: "Select"
  input: "mean/Greater"
  input: "mean/truediv"
  input: "mean/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/truediv_1"
  op: "RealDiv"
  input: "mean/AssignAdd"
  input: "mean/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/zeros_like_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/Greater_1"
  op: "Greater"
  input: "mean/AssignAdd_1"
  input: "mean/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/update_op"
  op: "Select"
  input: "mean/Greater_1"
  input: "mean/truediv_1"
  input: "mean/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_3"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Reshape_4"
  op: "Reshape"
  input: "GatherV2_3"
  input: "Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Equal_2"
  op: "Equal"
  input: "Reshape_3"
  input: "Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Cast_3"
  op: "Cast"
  input: "Equal_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Cast_4/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "Cast_4"
  op: "Cast"
  input: "Cast_4/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Sum_2/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_2"
  op: "Sum"
  input: "Cast_3"
  input: "Sum_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Minimum_1"
  op: "Minimum"
  input: "Cast_4"
  input: "Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_4/Square"
  op: "Square"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_4/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_4/Sum"
  op: "Sum"
  input: "l2_normalize_4/Square"
  input: "l2_normalize_4/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_4/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_4/Maximum"
  op: "Maximum"
  input: "l2_normalize_4/Sum"
  input: "l2_normalize_4/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_4/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_4/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_4"
  op: "Mul"
  input: "Slice"
  input: "l2_normalize_4/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_5/Square"
  op: "Square"
  input: "Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_5/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_5/Sum"
  op: "Sum"
  input: "l2_normalize_5/Square"
  input: "l2_normalize_5/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_5/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_5/Maximum"
  op: "Maximum"
  input: "l2_normalize_5/Sum"
  input: "l2_normalize_5/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_5/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_5/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_5"
  op: "Mul"
  input: "Slice_1"
  input: "l2_normalize_5/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "transpose_1/Rank"
  op: "Rank"
  input: "l2_normalize_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transpose_1/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "transpose_1/sub"
  op: "Sub"
  input: "transpose_1/Rank"
  input: "transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transpose_1/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "transpose_1/Range"
  op: "Range"
  input: "transpose_1/Range/start"
  input: "transpose_1/Rank"
  input: "transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transpose_1/sub_1"
  op: "Sub"
  input: "transpose_1/sub"
  input: "transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transpose_1"
  op: "Transpose"
  input: "l2_normalize_5"
  input: "transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "MatMul_2"
  op: "MatMul"
  input: "l2_normalize_4"
  input: "transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "Const_3"
  input: "MatMul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Neg_1"
  op: "Neg"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Exp_1"
  op: "Exp"
  input: "Neg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "TopKV2_1/k"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "TopKV2_1"
  op: "TopKV2"
  input: "Exp_1"
  input: "TopKV2_1/k"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: 75
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "GatherV2_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_5"
  op: "GatherV2"
  input: "GatherV2_3"
  input: "TopKV2_1:1"
  input: "GatherV2_5/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_5/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_5"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Equal_3"
  op: "Equal"
  input: "GatherV2_5"
  input: "Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "Cast_5"
  op: "Cast"
  input: "Equal_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "Sum_3/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_3"
  op: "Sum"
  input: "Cast_5"
  input: "Sum_3/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "Sum_3"
  input: "Minimum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "mean_1/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_1/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_1/total/Assign"
  op: "Assign"
  input: "mean_1/total"
  input: "mean_1/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_1/total/read"
  op: "Identity"
  input: "mean_1/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_1/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_1/count/Assign"
  op: "Assign"
  input: "mean_1/count"
  input: "mean_1/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_1/count/read"
  op: "Identity"
  input: "mean_1/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "mean_1/ToFloat"
  op: "Cast"
  input: "mean_1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_1/Sum"
  op: "Sum"
  input: "truediv_1"
  input: "mean_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_1/AssignAdd"
  op: "AssignAdd"
  input: "mean_1/total"
  input: "mean_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_1/AssignAdd_1"
  op: "AssignAdd"
  input: "mean_1/count"
  input: "mean_1/ToFloat"
  input: "^truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_1/truediv"
  op: "RealDiv"
  input: "mean_1/total/read"
  input: "mean_1/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_1/Greater"
  op: "Greater"
  input: "mean_1/count/read"
  input: "mean_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/value"
  op: "Select"
  input: "mean_1/Greater"
  input: "mean_1/truediv"
  input: "mean_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/truediv_1"
  op: "RealDiv"
  input: "mean_1/AssignAdd"
  input: "mean_1/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/zeros_like_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_1/Greater_1"
  op: "Greater"
  input: "mean_1/AssignAdd_1"
  input: "mean_1/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/update_op"
  op: "Select"
  input: "mean_1/Greater_1"
  input: "mean_1/truediv_1"
  input: "mean_1/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Reshape_6/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_6"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_7/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Reshape_7"
  op: "Reshape"
  input: "GatherV2_3"
  input: "Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Equal_4"
  op: "Equal"
  input: "Reshape_6"
  input: "Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Cast_6"
  op: "Cast"
  input: "Equal_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Cast_7/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "Cast_7"
  op: "Cast"
  input: "Cast_7/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Sum_4/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_4"
  op: "Sum"
  input: "Cast_6"
  input: "Sum_4/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Minimum_2"
  op: "Minimum"
  input: "Cast_7"
  input: "Sum_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_6/Square"
  op: "Square"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_6/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_6/Sum"
  op: "Sum"
  input: "l2_normalize_6/Square"
  input: "l2_normalize_6/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_6/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_6/Maximum"
  op: "Maximum"
  input: "l2_normalize_6/Sum"
  input: "l2_normalize_6/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_6/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_6/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_6"
  op: "Mul"
  input: "Slice"
  input: "l2_normalize_6/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_7/Square"
  op: "Square"
  input: "Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_7/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_7/Sum"
  op: "Sum"
  input: "l2_normalize_7/Square"
  input: "l2_normalize_7/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_7/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_7/Maximum"
  op: "Maximum"
  input: "l2_normalize_7/Sum"
  input: "l2_normalize_7/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_7/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_7/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_7"
  op: "Mul"
  input: "Slice_1"
  input: "l2_normalize_7/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "transpose_2/Rank"
  op: "Rank"
  input: "l2_normalize_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transpose_2/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "transpose_2/sub"
  op: "Sub"
  input: "transpose_2/Rank"
  input: "transpose_2/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transpose_2/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transpose_2/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "transpose_2/Range"
  op: "Range"
  input: "transpose_2/Range/start"
  input: "transpose_2/Rank"
  input: "transpose_2/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transpose_2/sub_1"
  op: "Sub"
  input: "transpose_2/sub"
  input: "transpose_2/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transpose_2"
  op: "Transpose"
  input: "l2_normalize_7"
  input: "transpose_2/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "MatMul_3"
  op: "MatMul"
  input: "l2_normalize_6"
  input: "transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "Const_4"
  input: "MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Neg_2"
  op: "Neg"
  input: "sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Exp_2"
  op: "Exp"
  input: "Neg_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "TopKV2_2/k"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "TopKV2_2"
  op: "TopKV2"
  input: "Exp_2"
  input: "TopKV2_2/k"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 75
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "GatherV2_6/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_6"
  op: "GatherV2"
  input: "GatherV2_3"
  input: "TopKV2_2:1"
  input: "GatherV2_6/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_8/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_8"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Equal_5"
  op: "Equal"
  input: "GatherV2_6"
  input: "Reshape_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Cast_8"
  op: "Cast"
  input: "Equal_5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Sum_5/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_5"
  op: "Sum"
  input: "Cast_8"
  input: "Sum_5/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_2"
  op: "RealDiv"
  input: "Sum_5"
  input: "Minimum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "mean_2/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_2/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_2/total/Assign"
  op: "Assign"
  input: "mean_2/total"
  input: "mean_2/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_2/total/read"
  op: "Identity"
  input: "mean_2/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_2/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_2/count/Assign"
  op: "Assign"
  input: "mean_2/count"
  input: "mean_2/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_2/count/read"
  op: "Identity"
  input: "mean_2/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "mean_2/ToFloat"
  op: "Cast"
  input: "mean_2/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_2/Sum"
  op: "Sum"
  input: "truediv_2"
  input: "mean_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_2/AssignAdd"
  op: "AssignAdd"
  input: "mean_2/total"
  input: "mean_2/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_2/AssignAdd_1"
  op: "AssignAdd"
  input: "mean_2/count"
  input: "mean_2/ToFloat"
  input: "^truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_2/truediv"
  op: "RealDiv"
  input: "mean_2/total/read"
  input: "mean_2/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_2/Greater"
  op: "Greater"
  input: "mean_2/count/read"
  input: "mean_2/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/value"
  op: "Select"
  input: "mean_2/Greater"
  input: "mean_2/truediv"
  input: "mean_2/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/truediv_1"
  op: "RealDiv"
  input: "mean_2/AssignAdd"
  input: "mean_2/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/zeros_like_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_2/Greater_1"
  op: "Greater"
  input: "mean_2/AssignAdd_1"
  input: "mean_2/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/update_op"
  op: "Select"
  input: "mean_2/Greater_1"
  input: "mean_2/truediv_1"
  input: "mean_2/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Reshape_9/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_9"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_10/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Reshape_10"
  op: "Reshape"
  input: "GatherV2_3"
  input: "Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Equal_6"
  op: "Equal"
  input: "Reshape_9"
  input: "Reshape_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Cast_9"
  op: "Cast"
  input: "Equal_6"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Cast_10/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "Cast_10"
  op: "Cast"
  input: "Cast_10/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Sum_6/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_6"
  op: "Sum"
  input: "Cast_9"
  input: "Sum_6/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Minimum_3"
  op: "Minimum"
  input: "Cast_10"
  input: "Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_8/Square"
  op: "Square"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_8/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_8/Sum"
  op: "Sum"
  input: "l2_normalize_8/Square"
  input: "l2_normalize_8/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_8/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_8/Maximum"
  op: "Maximum"
  input: "l2_normalize_8/Sum"
  input: "l2_normalize_8/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_8/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_8/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_8"
  op: "Mul"
  input: "Slice"
  input: "l2_normalize_8/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_9/Square"
  op: "Square"
  input: "Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_9/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_9/Sum"
  op: "Sum"
  input: "l2_normalize_9/Square"
  input: "l2_normalize_9/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_9/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_9/Maximum"
  op: "Maximum"
  input: "l2_normalize_9/Sum"
  input: "l2_normalize_9/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_9/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_9/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_9"
  op: "Mul"
  input: "Slice_1"
  input: "l2_normalize_9/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "transpose_3/Rank"
  op: "Rank"
  input: "l2_normalize_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transpose_3/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "transpose_3/sub"
  op: "Sub"
  input: "transpose_3/Rank"
  input: "transpose_3/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transpose_3/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transpose_3/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "transpose_3/Range"
  op: "Range"
  input: "transpose_3/Range/start"
  input: "transpose_3/Rank"
  input: "transpose_3/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transpose_3/sub_1"
  op: "Sub"
  input: "transpose_3/sub"
  input: "transpose_3/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transpose_3"
  op: "Transpose"
  input: "l2_normalize_9"
  input: "transpose_3/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "MatMul_4"
  op: "MatMul"
  input: "l2_normalize_8"
  input: "transpose_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sub_3"
  op: "Sub"
  input: "Const_5"
  input: "MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Neg_3"
  op: "Neg"
  input: "sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Exp_3"
  op: "Exp"
  input: "Neg_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "TopKV2_3/k"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "TopKV2_3"
  op: "TopKV2"
  input: "Exp_3"
  input: "TopKV2_3/k"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 75
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "GatherV2_7/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_7"
  op: "GatherV2"
  input: "GatherV2_3"
  input: "TopKV2_3:1"
  input: "GatherV2_7/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_11/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_11"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Equal_7"
  op: "Equal"
  input: "GatherV2_7"
  input: "Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Cast_11"
  op: "Cast"
  input: "Equal_7"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Sum_7/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_7"
  op: "Sum"
  input: "Cast_11"
  input: "Sum_7/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_3"
  op: "RealDiv"
  input: "Sum_7"
  input: "Minimum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "mean_3/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_3/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_3/total/Assign"
  op: "Assign"
  input: "mean_3/total"
  input: "mean_3/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_3/total/read"
  op: "Identity"
  input: "mean_3/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_3/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_3/count/Assign"
  op: "Assign"
  input: "mean_3/count"
  input: "mean_3/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_3/count/read"
  op: "Identity"
  input: "mean_3/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "mean_3/ToFloat"
  op: "Cast"
  input: "mean_3/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_3/Sum"
  op: "Sum"
  input: "truediv_3"
  input: "mean_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_3/AssignAdd"
  op: "AssignAdd"
  input: "mean_3/total"
  input: "mean_3/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_3/AssignAdd_1"
  op: "AssignAdd"
  input: "mean_3/count"
  input: "mean_3/ToFloat"
  input: "^truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_3/truediv"
  op: "RealDiv"
  input: "mean_3/total/read"
  input: "mean_3/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_3/Greater"
  op: "Greater"
  input: "mean_3/count/read"
  input: "mean_3/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/value"
  op: "Select"
  input: "mean_3/Greater"
  input: "mean_3/truediv"
  input: "mean_3/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/truediv_1"
  op: "RealDiv"
  input: "mean_3/AssignAdd"
  input: "mean_3/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/zeros_like_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_3/Greater_1"
  op: "Greater"
  input: "mean_3/AssignAdd_1"
  input: "mean_3/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/update_op"
  op: "Select"
  input: "mean_3/Greater_1"
  input: "mean_3/truediv_1"
  input: "mean_3/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Precision_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Precision_1"
      }
    }
  }
}
node {
  name: "Precision_1"
  op: "ScalarSummary"
  input: "Precision_1/tags"
  input: "mean/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Precision_20/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Precision_20"
      }
    }
  }
}
node {
  name: "Precision_20"
  op: "ScalarSummary"
  input: "Precision_20/tags"
  input: "mean_3/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Precision_5/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Precision_5"
      }
    }
  }
}
node {
  name: "Precision_5"
  op: "ScalarSummary"
  input: "Precision_5/tags"
  input: "mean_1/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Precision_10/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Precision_10"
      }
    }
  }
}
node {
  name: "Precision_10"
  op: "ScalarSummary"
  input: "Precision_10/tags"
  input: "mean_2/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "Precision_1"
  input: "Precision_20"
  input: "Precision_5"
  input: "Precision_10"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 68
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 68
          }
        }
        string_val: "ball/mean_vectors"
        string_val: "ball/scale"
        string_val: "conv1_1/conv1_1/bn/beta"
        string_val: "conv1_1/conv1_1/bn/moving_mean"
        string_val: "conv1_1/conv1_1/bn/moving_variance"
        string_val: "conv1_1/weights"
        string_val: "conv1_2/conv1_2/bn/beta"
        string_val: "conv1_2/conv1_2/bn/moving_mean"
        string_val: "conv1_2/conv1_2/bn/moving_variance"
        string_val: "conv1_2/weights"
        string_val: "conv2_1/1/conv2_1/1/bn/beta"
        string_val: "conv2_1/1/conv2_1/1/bn/moving_mean"
        string_val: "conv2_1/1/conv2_1/1/bn/moving_variance"
        string_val: "conv2_1/1/weights"
        string_val: "conv2_1/2/biases"
        string_val: "conv2_1/2/weights"
        string_val: "conv2_3/1/conv2_3/1/bn/beta"
        string_val: "conv2_3/1/conv2_3/1/bn/moving_mean"
        string_val: "conv2_3/1/conv2_3/1/bn/moving_variance"
        string_val: "conv2_3/1/weights"
        string_val: "conv2_3/2/biases"
        string_val: "conv2_3/2/weights"
        string_val: "conv2_3/bn/beta"
        string_val: "conv2_3/bn/moving_mean"
        string_val: "conv2_3/bn/moving_variance"
        string_val: "conv3_1/1/conv3_1/1/bn/beta"
        string_val: "conv3_1/1/conv3_1/1/bn/moving_mean"
        string_val: "conv3_1/1/conv3_1/1/bn/moving_variance"
        string_val: "conv3_1/1/weights"
        string_val: "conv3_1/2/biases"
        string_val: "conv3_1/2/weights"
        string_val: "conv3_1/bn/beta"
        string_val: "conv3_1/bn/moving_mean"
        string_val: "conv3_1/bn/moving_variance"
        string_val: "conv3_1/projection/weights"
        string_val: "conv3_3/1/conv3_3/1/bn/beta"
        string_val: "conv3_3/1/conv3_3/1/bn/moving_mean"
        string_val: "conv3_3/1/conv3_3/1/bn/moving_variance"
        string_val: "conv3_3/1/weights"
        string_val: "conv3_3/2/biases"
        string_val: "conv3_3/2/weights"
        string_val: "conv3_3/bn/beta"
        string_val: "conv3_3/bn/moving_mean"
        string_val: "conv3_3/bn/moving_variance"
        string_val: "conv4_1/1/conv4_1/1/bn/beta"
        string_val: "conv4_1/1/conv4_1/1/bn/moving_mean"
        string_val: "conv4_1/1/conv4_1/1/bn/moving_variance"
        string_val: "conv4_1/1/weights"
        string_val: "conv4_1/2/biases"
        string_val: "conv4_1/2/weights"
        string_val: "conv4_1/bn/beta"
        string_val: "conv4_1/bn/moving_mean"
        string_val: "conv4_1/bn/moving_variance"
        string_val: "conv4_1/projection/weights"
        string_val: "conv4_3/1/conv4_3/1/bn/beta"
        string_val: "conv4_3/1/conv4_3/1/bn/moving_mean"
        string_val: "conv4_3/1/conv4_3/1/bn/moving_variance"
        string_val: "conv4_3/1/weights"
        string_val: "conv4_3/2/biases"
        string_val: "conv4_3/2/weights"
        string_val: "conv4_3/bn/beta"
        string_val: "conv4_3/bn/moving_mean"
        string_val: "conv4_3/bn/moving_variance"
        string_val: "fc1/fc1/bn/beta"
        string_val: "fc1/fc1/bn/moving_mean"
        string_val: "fc1/fc1/bn/moving_variance"
        string_val: "fc1/weights"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 68
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 68
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "ball/mean_vectors"
  input: "ball/scale"
  input: "conv1_1/conv1_1/bn/beta"
  input: "conv1_1/conv1_1/bn/moving_mean"
  input: "conv1_1/conv1_1/bn/moving_variance"
  input: "conv1_1/weights"
  input: "conv1_2/conv1_2/bn/beta"
  input: "conv1_2/conv1_2/bn/moving_mean"
  input: "conv1_2/conv1_2/bn/moving_variance"
  input: "conv1_2/weights"
  input: "conv2_1/1/conv2_1/1/bn/beta"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance"
  input: "conv2_1/1/weights"
  input: "conv2_1/2/biases"
  input: "conv2_1/2/weights"
  input: "conv2_3/1/conv2_3/1/bn/beta"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance"
  input: "conv2_3/1/weights"
  input: "conv2_3/2/biases"
  input: "conv2_3/2/weights"
  input: "conv2_3/bn/beta"
  input: "conv2_3/bn/moving_mean"
  input: "conv2_3/bn/moving_variance"
  input: "conv3_1/1/conv3_1/1/bn/beta"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance"
  input: "conv3_1/1/weights"
  input: "conv3_1/2/biases"
  input: "conv3_1/2/weights"
  input: "conv3_1/bn/beta"
  input: "conv3_1/bn/moving_mean"
  input: "conv3_1/bn/moving_variance"
  input: "conv3_1/projection/weights"
  input: "conv3_3/1/conv3_3/1/bn/beta"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance"
  input: "conv3_3/1/weights"
  input: "conv3_3/2/biases"
  input: "conv3_3/2/weights"
  input: "conv3_3/bn/beta"
  input: "conv3_3/bn/moving_mean"
  input: "conv3_3/bn/moving_variance"
  input: "conv4_1/1/conv4_1/1/bn/beta"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance"
  input: "conv4_1/1/weights"
  input: "conv4_1/2/biases"
  input: "conv4_1/2/weights"
  input: "conv4_1/bn/beta"
  input: "conv4_1/bn/moving_mean"
  input: "conv4_1/bn/moving_variance"
  input: "conv4_1/projection/weights"
  input: "conv4_3/1/conv4_3/1/bn/beta"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance"
  input: "conv4_3/1/weights"
  input: "conv4_3/2/biases"
  input: "conv4_3/2/weights"
  input: "conv4_3/bn/beta"
  input: "conv4_3/bn/moving_mean"
  input: "conv4_3/bn/moving_variance"
  input: "fc1/fc1/bn/beta"
  input: "fc1/fc1/bn/moving_mean"
  input: "fc1/fc1/bn/moving_variance"
  input: "fc1/weights"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 68
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 68
          }
        }
        string_val: "ball/mean_vectors"
        string_val: "ball/scale"
        string_val: "conv1_1/conv1_1/bn/beta"
        string_val: "conv1_1/conv1_1/bn/moving_mean"
        string_val: "conv1_1/conv1_1/bn/moving_variance"
        string_val: "conv1_1/weights"
        string_val: "conv1_2/conv1_2/bn/beta"
        string_val: "conv1_2/conv1_2/bn/moving_mean"
        string_val: "conv1_2/conv1_2/bn/moving_variance"
        string_val: "conv1_2/weights"
        string_val: "conv2_1/1/conv2_1/1/bn/beta"
        string_val: "conv2_1/1/conv2_1/1/bn/moving_mean"
        string_val: "conv2_1/1/conv2_1/1/bn/moving_variance"
        string_val: "conv2_1/1/weights"
        string_val: "conv2_1/2/biases"
        string_val: "conv2_1/2/weights"
        string_val: "conv2_3/1/conv2_3/1/bn/beta"
        string_val: "conv2_3/1/conv2_3/1/bn/moving_mean"
        string_val: "conv2_3/1/conv2_3/1/bn/moving_variance"
        string_val: "conv2_3/1/weights"
        string_val: "conv2_3/2/biases"
        string_val: "conv2_3/2/weights"
        string_val: "conv2_3/bn/beta"
        string_val: "conv2_3/bn/moving_mean"
        string_val: "conv2_3/bn/moving_variance"
        string_val: "conv3_1/1/conv3_1/1/bn/beta"
        string_val: "conv3_1/1/conv3_1/1/bn/moving_mean"
        string_val: "conv3_1/1/conv3_1/1/bn/moving_variance"
        string_val: "conv3_1/1/weights"
        string_val: "conv3_1/2/biases"
        string_val: "conv3_1/2/weights"
        string_val: "conv3_1/bn/beta"
        string_val: "conv3_1/bn/moving_mean"
        string_val: "conv3_1/bn/moving_variance"
        string_val: "conv3_1/projection/weights"
        string_val: "conv3_3/1/conv3_3/1/bn/beta"
        string_val: "conv3_3/1/conv3_3/1/bn/moving_mean"
        string_val: "conv3_3/1/conv3_3/1/bn/moving_variance"
        string_val: "conv3_3/1/weights"
        string_val: "conv3_3/2/biases"
        string_val: "conv3_3/2/weights"
        string_val: "conv3_3/bn/beta"
        string_val: "conv3_3/bn/moving_mean"
        string_val: "conv3_3/bn/moving_variance"
        string_val: "conv4_1/1/conv4_1/1/bn/beta"
        string_val: "conv4_1/1/conv4_1/1/bn/moving_mean"
        string_val: "conv4_1/1/conv4_1/1/bn/moving_variance"
        string_val: "conv4_1/1/weights"
        string_val: "conv4_1/2/biases"
        string_val: "conv4_1/2/weights"
        string_val: "conv4_1/bn/beta"
        string_val: "conv4_1/bn/moving_mean"
        string_val: "conv4_1/bn/moving_variance"
        string_val: "conv4_1/projection/weights"
        string_val: "conv4_3/1/conv4_3/1/bn/beta"
        string_val: "conv4_3/1/conv4_3/1/bn/moving_mean"
        string_val: "conv4_3/1/conv4_3/1/bn/moving_variance"
        string_val: "conv4_3/1/weights"
        string_val: "conv4_3/2/biases"
        string_val: "conv4_3/2/weights"
        string_val: "conv4_3/bn/beta"
        string_val: "conv4_3/bn/moving_mean"
        string_val: "conv4_3/bn/moving_variance"
        string_val: "fc1/fc1/bn/beta"
        string_val: "fc1/fc1/bn/moving_mean"
        string_val: "fc1/fc1/bn/moving_variance"
        string_val: "fc1/weights"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 68
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 68
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "ball/mean_vectors"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "ball/scale"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "conv1_1/conv1_1/bn/beta"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "conv1_1/conv1_1/bn/moving_mean"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "conv1_1/conv1_1/bn/moving_variance"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "conv1_1/weights"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "conv1_2/conv1_2/bn/beta"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "conv1_2/conv1_2/bn/moving_mean"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "conv1_2/conv1_2/bn/moving_variance"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "conv1_2/weights"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "conv2_1/1/conv2_1/1/bn/beta"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "conv2_1/1/weights"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "conv2_1/2/biases"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "conv2_1/2/weights"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "conv2_3/1/conv2_3/1/bn/beta"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "conv2_3/1/weights"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "conv2_3/2/biases"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "conv2_3/2/weights"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "conv2_3/bn/beta"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "conv2_3/bn/moving_mean"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "conv2_3/bn/moving_variance"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "conv3_1/1/conv3_1/1/bn/beta"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "conv3_1/1/weights"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "conv3_1/2/biases"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "conv3_1/2/weights"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "conv3_1/bn/beta"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "conv3_1/bn/moving_mean"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "conv3_1/bn/moving_variance"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "conv3_1/projection/weights"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "conv3_3/1/conv3_3/1/bn/beta"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "conv3_3/1/weights"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "conv3_3/2/biases"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "conv3_3/2/weights"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "conv3_3/bn/beta"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "conv3_3/bn/moving_mean"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "conv3_3/bn/moving_variance"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "conv4_1/1/conv4_1/1/bn/beta"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "conv4_1/1/weights"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "conv4_1/2/biases"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "conv4_1/2/weights"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "conv4_1/bn/beta"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "conv4_1/bn/moving_mean"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "conv4_1/bn/moving_variance"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "conv4_1/projection/weights"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "conv4_3/1/conv4_3/1/bn/beta"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "conv4_3/1/weights"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "conv4_3/2/biases"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "conv4_3/2/weights"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "conv4_3/bn/beta"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "conv4_3/bn/moving_mean"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "conv4_3/bn/moving_variance"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "fc1/fc1/bn/beta"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "fc1/fc1/bn/moving_mean"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "fc1/fc1/bn/moving_variance"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "fc1/weights"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv1_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv1_1/conv1_1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv1_1/conv1_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv1_1/conv1_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv1_2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "conv1_2/conv1_2/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "conv1_2/conv1_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "conv1_2/conv1_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "conv2_1/1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "conv2_1/1/conv2_1/1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "conv2_1/2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "conv2_1/2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "conv2_3/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "conv2_3/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "conv2_3/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "conv2_3/1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "conv2_3/1/conv2_3/1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "conv2_3/2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv2_3/2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "conv3_1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "conv3_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "conv3_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "conv3_1/1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "conv3_1/1/conv3_1/1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "conv3_1/2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "conv3_1/2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "conv3_1/projection/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "conv3_3/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "conv3_3/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "conv3_3/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "conv3_3/1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "conv3_3/1/conv3_3/1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "conv3_3/2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "conv3_3/2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "conv4_1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "conv4_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "conv4_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "conv4_1/1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "conv4_1/1/conv4_1/1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "conv4_1/2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "conv4_1/2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "conv4_1/projection/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "conv4_3/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "conv4_3/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "conv4_3/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "conv4_3/1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "conv4_3/1/conv4_3/1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "conv4_3/2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "conv4_3/2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "fc1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "fc1/fc1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "fc1/fc1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "fc1/fc1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "ball/mean_vectors"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "ball/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "mean_1/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "mean_1/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "mean_2/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "mean_2/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "mean_3/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "mean_3/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 76
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 76
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 76
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 76
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 76
          }
        }
        string_val: "conv1_1/weights"
        string_val: "conv1_1/conv1_1/bn/beta"
        string_val: "conv1_1/conv1_1/bn/moving_mean"
        string_val: "conv1_1/conv1_1/bn/moving_variance"
        string_val: "conv1_2/weights"
        string_val: "conv1_2/conv1_2/bn/beta"
        string_val: "conv1_2/conv1_2/bn/moving_mean"
        string_val: "conv1_2/conv1_2/bn/moving_variance"
        string_val: "conv2_1/1/weights"
        string_val: "conv2_1/1/conv2_1/1/bn/beta"
        string_val: "conv2_1/1/conv2_1/1/bn/moving_mean"
        string_val: "conv2_1/1/conv2_1/1/bn/moving_variance"
        string_val: "conv2_1/2/weights"
        string_val: "conv2_1/2/biases"
        string_val: "conv2_3/bn/beta"
        string_val: "conv2_3/bn/moving_mean"
        string_val: "conv2_3/bn/moving_variance"
        string_val: "conv2_3/1/weights"
        string_val: "conv2_3/1/conv2_3/1/bn/beta"
        string_val: "conv2_3/1/conv2_3/1/bn/moving_mean"
        string_val: "conv2_3/1/conv2_3/1/bn/moving_variance"
        string_val: "conv2_3/2/weights"
        string_val: "conv2_3/2/biases"
        string_val: "conv3_1/bn/beta"
        string_val: "conv3_1/bn/moving_mean"
        string_val: "conv3_1/bn/moving_variance"
        string_val: "conv3_1/1/weights"
        string_val: "conv3_1/1/conv3_1/1/bn/beta"
        string_val: "conv3_1/1/conv3_1/1/bn/moving_mean"
        string_val: "conv3_1/1/conv3_1/1/bn/moving_variance"
        string_val: "conv3_1/2/weights"
        string_val: "conv3_1/2/biases"
        string_val: "conv3_1/projection/weights"
        string_val: "conv3_3/bn/beta"
        string_val: "conv3_3/bn/moving_mean"
        string_val: "conv3_3/bn/moving_variance"
        string_val: "conv3_3/1/weights"
        string_val: "conv3_3/1/conv3_3/1/bn/beta"
        string_val: "conv3_3/1/conv3_3/1/bn/moving_mean"
        string_val: "conv3_3/1/conv3_3/1/bn/moving_variance"
        string_val: "conv3_3/2/weights"
        string_val: "conv3_3/2/biases"
        string_val: "conv4_1/bn/beta"
        string_val: "conv4_1/bn/moving_mean"
        string_val: "conv4_1/bn/moving_variance"
        string_val: "conv4_1/1/weights"
        string_val: "conv4_1/1/conv4_1/1/bn/beta"
        string_val: "conv4_1/1/conv4_1/1/bn/moving_mean"
        string_val: "conv4_1/1/conv4_1/1/bn/moving_variance"
        string_val: "conv4_1/2/weights"
        string_val: "conv4_1/2/biases"
        string_val: "conv4_1/projection/weights"
        string_val: "conv4_3/bn/beta"
        string_val: "conv4_3/bn/moving_mean"
        string_val: "conv4_3/bn/moving_variance"
        string_val: "conv4_3/1/weights"
        string_val: "conv4_3/1/conv4_3/1/bn/beta"
        string_val: "conv4_3/1/conv4_3/1/bn/moving_mean"
        string_val: "conv4_3/1/conv4_3/1/bn/moving_variance"
        string_val: "conv4_3/2/weights"
        string_val: "conv4_3/2/biases"
        string_val: "fc1/weights"
        string_val: "fc1/fc1/bn/beta"
        string_val: "fc1/fc1/bn/moving_mean"
        string_val: "fc1/fc1/bn/moving_variance"
        string_val: "ball/mean_vectors"
        string_val: "ball/scale"
        string_val: "global_step"
        string_val: "mean/total"
        string_val: "mean/count"
        string_val: "mean_1/total"
        string_val: "mean_1/count"
        string_val: "mean_2/total"
        string_val: "mean_2/count"
        string_val: "mean_3/total"
        string_val: "mean_3/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 76
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 76
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^ball/mean_vectors/Assign"
  input: "^ball/scale/Assign"
  input: "^conv1_1/conv1_1/bn/beta/Assign"
  input: "^conv1_1/conv1_1/bn/moving_mean/Assign"
  input: "^conv1_1/conv1_1/bn/moving_variance/Assign"
  input: "^conv1_1/weights/Assign"
  input: "^conv1_2/conv1_2/bn/beta/Assign"
  input: "^conv1_2/conv1_2/bn/moving_mean/Assign"
  input: "^conv1_2/conv1_2/bn/moving_variance/Assign"
  input: "^conv1_2/weights/Assign"
  input: "^conv2_1/1/conv2_1/1/bn/beta/Assign"
  input: "^conv2_1/1/conv2_1/1/bn/moving_mean/Assign"
  input: "^conv2_1/1/conv2_1/1/bn/moving_variance/Assign"
  input: "^conv2_1/1/weights/Assign"
  input: "^conv2_1/2/biases/Assign"
  input: "^conv2_1/2/weights/Assign"
  input: "^conv2_3/1/conv2_3/1/bn/beta/Assign"
  input: "^conv2_3/1/conv2_3/1/bn/moving_mean/Assign"
  input: "^conv2_3/1/conv2_3/1/bn/moving_variance/Assign"
  input: "^conv2_3/1/weights/Assign"
  input: "^conv2_3/2/biases/Assign"
  input: "^conv2_3/2/weights/Assign"
  input: "^conv2_3/bn/beta/Assign"
  input: "^conv2_3/bn/moving_mean/Assign"
  input: "^conv2_3/bn/moving_variance/Assign"
  input: "^conv3_1/1/conv3_1/1/bn/beta/Assign"
  input: "^conv3_1/1/conv3_1/1/bn/moving_mean/Assign"
  input: "^conv3_1/1/conv3_1/1/bn/moving_variance/Assign"
  input: "^conv3_1/1/weights/Assign"
  input: "^conv3_1/2/biases/Assign"
  input: "^conv3_1/2/weights/Assign"
  input: "^conv3_1/bn/beta/Assign"
  input: "^conv3_1/bn/moving_mean/Assign"
  input: "^conv3_1/bn/moving_variance/Assign"
  input: "^conv3_1/projection/weights/Assign"
  input: "^conv3_3/1/conv3_3/1/bn/beta/Assign"
  input: "^conv3_3/1/conv3_3/1/bn/moving_mean/Assign"
  input: "^conv3_3/1/conv3_3/1/bn/moving_variance/Assign"
  input: "^conv3_3/1/weights/Assign"
  input: "^conv3_3/2/biases/Assign"
  input: "^conv3_3/2/weights/Assign"
  input: "^conv3_3/bn/beta/Assign"
  input: "^conv3_3/bn/moving_mean/Assign"
  input: "^conv3_3/bn/moving_variance/Assign"
  input: "^conv4_1/1/conv4_1/1/bn/beta/Assign"
  input: "^conv4_1/1/conv4_1/1/bn/moving_mean/Assign"
  input: "^conv4_1/1/conv4_1/1/bn/moving_variance/Assign"
  input: "^conv4_1/1/weights/Assign"
  input: "^conv4_1/2/biases/Assign"
  input: "^conv4_1/2/weights/Assign"
  input: "^conv4_1/bn/beta/Assign"
  input: "^conv4_1/bn/moving_mean/Assign"
  input: "^conv4_1/bn/moving_variance/Assign"
  input: "^conv4_1/projection/weights/Assign"
  input: "^conv4_3/1/conv4_3/1/bn/beta/Assign"
  input: "^conv4_3/1/conv4_3/1/bn/moving_mean/Assign"
  input: "^conv4_3/1/conv4_3/1/bn/moving_variance/Assign"
  input: "^conv4_3/1/weights/Assign"
  input: "^conv4_3/2/biases/Assign"
  input: "^conv4_3/2/weights/Assign"
  input: "^conv4_3/bn/beta/Assign"
  input: "^conv4_3/bn/moving_mean/Assign"
  input: "^conv4_3/bn/moving_variance/Assign"
  input: "^fc1/fc1/bn/beta/Assign"
  input: "^fc1/fc1/bn/moving_mean/Assign"
  input: "^fc1/fc1/bn/moving_variance/Assign"
  input: "^fc1/weights/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^mean/count/Assign"
  input: "^mean/total/Assign"
  input: "^mean_1/count/Assign"
  input: "^mean_1/total/Assign"
  input: "^mean_2/count/Assign"
  input: "^mean_2/total/Assign"
  input: "^mean_3/count/Assign"
  input: "^mean_3/total/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
versions {
  producer: 26
}
